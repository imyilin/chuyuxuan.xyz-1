<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Chuyuxuan</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://chuyuxuan.xyz/"/>
  <updated>2020-05-27T08:11:59.297Z</updated>
  <id>https://chuyuxuan.xyz/</id>
  
  <author>
    <name>Chuyuxuan</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>基于socket.io开发的在线聊天网站</title>
    <link href="https://chuyuxuan.xyz/2020/05/26/%E2%96%B6%E5%89%8D%E7%AB%AF/JavaScript/%E5%9F%BA%E4%BA%8Esocket.io%E5%BC%80%E5%8F%91%E7%9A%84%E8%BD%AF%E4%BB%B6/"/>
    <id>https://chuyuxuan.xyz/2020/05/26/%E2%96%B6%E5%89%8D%E7%AB%AF/JavaScript/%E5%9F%BA%E4%BA%8Esocket.io%E5%BC%80%E5%8F%91%E7%9A%84%E8%BD%AF%E4%BB%B6/</id>
    <published>2020-05-26T04:30:00.000Z</published>
    <updated>2020-05-27T08:11:59.297Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="一-这里不是在项目介绍"><a class="markdownIt-Anchor" href="#一-这里不是在项目介绍"></a> 一、这里不是在项目介绍</h1><p>呃。三周前吧，我们的<code>Internet Web编程</code>这门课程就结束了，就教一些<code>Html</code>、<code>Css</code>、<code>Javascript</code>等等。嘛，这些自己大一的时候就差不多会了的东西现在学起来可所谓非常轻松。<strong>当然</strong> ，出了这些，还有一些被现在抛弃的技术：<code>javaweb</code> 。其实所谓的抛弃嘛就是他并不符合现在的前后端分离的大趋势，当然，代码的<code>耦合性</code>也是十分高的。当初html文件里嵌套<code>&lt;%%&gt;</code>以及<code>java</code>代码可所谓嵌套的自己很烦躁，可想而知，那个还在<code>jsp</code>一统天下的年代，程序员要想完成一个企业级的项目得多么痛苦，这种情况下阿里的淘宝能起来真的是很牛逼很牛逼了！👍</p><p>当然，自己为了本次课设能稍微有点拿得出手的家伙，就从网络上各种收集资料，各种学习，马马虎虎的敲出来个大概，可能这个项目在一些大佬眼里看来就是一个最基本的小儿科哈哈哈😂.我也就当作一个阶段似的放在<a href="https://github.com/Chuyuxuan0v0/webchat" target="_blank" rel="noopener">Github</a>上面吧，可能多年以后回想起来看看看这个代码也会心里暗自发笑哈哈哈。这个项目花了一周多左右的时间吧，<code>主要是自己菜的离谱，得慢慢一个一个的学</code>。像在考虑后端使用<code>spring BOOT</code>的时候，那么能不能不用Java去写呀，于是便转到<code>node.js</code>上来了，<s>Java好久没有去碰了，生疏了🤣。</s> 这点又间接说明了熟能生巧。</p><h1 id="二-这里是在项目介绍复制readme"><a class="markdownIt-Anchor" href="#二-这里是在项目介绍复制readme"></a> 二、这里是在项目介绍(复制readme)</h1><div class="note info">            <h2 id="webchat"><a class="markdownIt-Anchor" href="#webchat"></a> webchat</h2><p>一款基于<code>Javascript+express+socket.io</code>构成的网络在线聊天应用</p><p>具体效果可以访问<a href="http://chat.chuyuxuan.xyz:4400" target="_blank" rel="noopener">http://chat.chuyuxuan.xyz:4400</a></p><ul><li><strong>2020年10月10日前该链接有效，别问为啥，问就是服务器过期我负担不起😭，所以不错的话请给个star吧</strong></li></ul><h3 id="项目讲解"><a class="markdownIt-Anchor" href="#项目讲解"></a> 项目讲解：</h3><iframe src="//player.bilibili.com/player.html?aid=840786560&bvid=BV1B54y1D7dA&cid=195091993&page=1" height="600" width="800" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><h2 id="下载"><a class="markdownIt-Anchor" href="#下载"></a> 下载</h2><pre><code>    git clone https://github.com/Chuyuxuan0v0/webchat.git</code></pre><h2 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h2><ul><li>你需要安装<code>node.js</code>,接下来才能进行一下操作，否则会报错误。</li></ul><p>⭐ 下载后进入根目录</p><pre><code>    cd ...  \webchat\</code></pre><p>⭐ 下载安装<code>node.js</code></p><p><a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">点我下载</a></p><p>⭐ 安装<code>express</code> <s>项目包里已经集成，安装好node之后可以跳过</s></p><pre><code>    npm install express --save</code></pre><p>⭐ 安装<code>socket.io</code> <s>项目包里已经集成，安装好node之后可以跳过</s></p><pre><code>    npm install --save socket.io    npm install --save socket.io-client</code></pre><p>⭐ 安装<code>mysql</code> <s>项目包里已经集成，安装好node之后可以跳过</s></p><pre><code>    npm install mysql</code></pre><p>⭐ 在MySQL中导入相关表</p><ul><li>所有要建立的表我都放在express.sql里了，可以根据里面的sql语言自行建立</li><li>或者借用数据库管理工具例如 navicat 导入该文件进行表的创建。<br><strong>注意。我是依赖于mysql 8.0的版本而创建的表格，如果你的sql文件导入不成功，请手动创建表</strong><br>部分表格目录如下:</li></ul><table><thead><tr><th style="text-align:left"></th><th style="text-align:left"></th><th style="text-align:left"></th><th style="text-align:left">user_info</th><th style="text-align:left"></th><th style="text-align:left"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:left">名</td><td style="text-align:left">类型</td><td style="text-align:left">长度</td><td style="text-align:left">小数点</td><td style="text-align:left">不是null</td><td style="text-align:left">主键</td><td style="text-align:left">注释</td></tr><tr><td style="text-align:left">id</td><td style="text-align:left">int</td><td style="text-align:left">5</td><td style="text-align:left">0</td><td style="text-align:left">√</td><td style="text-align:left">🔑</td><td style="text-align:left">注册用户数，注意，要选择自增</td></tr><tr><td style="text-align:left">name</td><td style="text-align:left">varchar</td><td style="text-align:left">15</td><td style="text-align:left">0</td><td style="text-align:left">√</td><td style="text-align:left"></td><td style="text-align:left">用户名</td></tr><tr><td style="text-align:left">avatar</td><td style="text-align:left">varchar</td><td style="text-align:left">100</td><td style="text-align:left">0</td><td style="text-align:left">√</td><td style="text-align:left"></td><td style="text-align:left">头像路径</td></tr><tr><td style="text-align:left">date</td><td style="text-align:left">varchar</td><td style="text-align:left">20</td><td style="text-align:left">0</td><td style="text-align:left">√</td><td style="text-align:left"></td><td style="text-align:left">日期</td></tr></tbody></table><table><thead><tr><th style="text-align:left"></th><th style="text-align:left"></th><th style="text-align:left"></th><th style="text-align:left">user_msg</th><th style="text-align:left"></th><th style="text-align:left"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:left">名</td><td style="text-align:left">类型</td><td style="text-align:left">长度</td><td style="text-align:left">小数点</td><td style="text-align:left">不是null</td><td style="text-align:left">主键</td><td style="text-align:left">注释</td></tr><tr><td style="text-align:left">id</td><td style="text-align:left">int</td><td style="text-align:left">5</td><td style="text-align:left">0</td><td style="text-align:left">√</td><td style="text-align:left">🔑</td><td style="text-align:left">注意，要选择自增</td></tr><tr><td style="text-align:left">user</td><td style="text-align:left">varchar</td><td style="text-align:left">15</td><td style="text-align:left">0</td><td style="text-align:left">√</td><td style="text-align:left"></td><td style="text-align:left">用户名</td></tr><tr><td style="text-align:left">avatar</td><td style="text-align:left">varchar</td><td style="text-align:left">100</td><td style="text-align:left">0</td><td style="text-align:left">√</td><td style="text-align:left"></td><td style="text-align:left">头像路径</td></tr><tr><td style="text-align:left">msg</td><td style="text-align:left">varchar</td><td style="text-align:left">255</td><td style="text-align:left">0</td><td style="text-align:left">√</td><td style="text-align:left"></td><td style="text-align:left">用户消息</td></tr><tr><td style="text-align:left">date</td><td style="text-align:left">varchar</td><td style="text-align:left">20</td><td style="text-align:left">0</td><td style="text-align:left">√</td><td style="text-align:left"></td><td style="text-align:left">日期</td></tr></tbody></table><p><em>数据表会不定时更新，详情请看代码里的链接</em></p><p>⭐ 启动项目</p><pre><code>    node app.js</code></pre><p>⭐ 在浏览器中输入以下网址 <s>这个端口可以自己更改的</s></p><pre><code>    localhost:4400 </code></pre><h2 id="部分功能展示"><a class="markdownIt-Anchor" href="#部分功能展示"></a> 部分功能展示</h2><ul><li>1.可以实现在线聊天，发送图片</li><li>2.可以是使用<code>ctrl+Enter</code>发送消息</li><li>3.进入退出有提示</li><li>4.适应手机，有响应式布局</li><li>5.查看历史聊天记录</li><li>6.。。。。。</li></ul><h2 id="待优化"><a class="markdownIt-Anchor" href="#待优化"></a> 待优化</h2><ul><li>优化UI界面，降低耦合性</li><li>优化界面响应速度</li><li>能够私聊个人，一对一聊天</li><li>。。。。。</li></ul><h2 id="部分预览"><a class="markdownIt-Anchor" href="#部分预览"></a> 部分预览</h2><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/gitee/cover1.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/gitee/cover1.jpg" class="lazyload"></a><br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/gitee/cover2.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/gitee/cover2.jpg" class="lazyload"></a><br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/gitee/cover3.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/gitee/cover3.jpg" class="lazyload"></a></p>          </div><h1 id="三-这里是结尾"><a class="markdownIt-Anchor" href="#三-这里是结尾"></a> 三、这里是结尾</h1><p>快6月了，也就几天了，当初的目标正在努力中，真的，只要别放弃就行。加油！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; 
      
    
    </summary>
    
    
      <category term="▶前端" scheme="https://chuyuxuan.xyz/categories/%E2%96%B6%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="socket.io" scheme="https://chuyuxuan.xyz/tags/socket-io/"/>
    
      <category term="websocket" scheme="https://chuyuxuan.xyz/tags/websocket/"/>
    
      <category term="node.js" scheme="https://chuyuxuan.xyz/tags/node-js/"/>
    
  </entry>
  
  <entry>
    <title>Linux 安装 nginx</title>
    <link href="https://chuyuxuan.xyz/2020/05/15/%E2%96%B6%E5%90%8E%E7%AB%AF/Linux/linux%E9%83%A8%E7%BD%B2nginx/"/>
    <id>https://chuyuxuan.xyz/2020/05/15/%E2%96%B6%E5%90%8E%E7%AB%AF/Linux/linux%E9%83%A8%E7%BD%B2nginx/</id>
    <published>2020-05-15T00:08:08.000Z</published>
    <updated>2020-05-27T07:41:41.247Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="手把手教你把自己的静态项目部署到服务器上"><a class="markdownIt-Anchor" href="#手把手教你把自己的静态项目部署到服务器上"></a> 手把手教你把自己的静态项目部署到服务器上</h1><p>自己写数学作业写的是在是烦躁，干脆找个东西来<code>放松</code>以下,于是就出了这期视频。<br>y</p><ul><li><p>视频地址：<a href="https://www.bilibili.com/video/BV1Ha4y1e72M" target="_blank" rel="noopener">BV1Ha4y1e72M</a></p></li><li><p>视频中的网站：<a href="http://video.chuyuxuan.xyz/" target="_blank" rel="noopener">Video.chuyuxuan.xyz</a> <code>有小彩蛋哦！</code></p></li></ul><iframe src="//player.bilibili.com/player.html?aid=668236157&bvid=BV1Ha4y1e72M&cid=191086854&page=1" height="600" width="900" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; 
      
    
    </summary>
    
    
      <category term="▶后端" scheme="https://chuyuxuan.xyz/categories/%E2%96%B6%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="Linux" scheme="https://chuyuxuan.xyz/tags/Linux/"/>
    
      <category term="centOS" scheme="https://chuyuxuan.xyz/tags/centOS/"/>
    
      <category term="nginx" scheme="https://chuyuxuan.xyz/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>无言</title>
    <link href="https://chuyuxuan.xyz/2020/05/08/%E2%96%B6%E7%94%9F%E6%B4%BB%E6%97%A5%E5%B8%B8/2020%E5%B9%B45%E6%9C%888%E6%97%A5/"/>
    <id>https://chuyuxuan.xyz/2020/05/08/%E2%96%B6%E7%94%9F%E6%B4%BB%E6%97%A5%E5%B8%B8/2020%E5%B9%B45%E6%9C%888%E6%97%A5/</id>
    <published>2020-05-08T10:19:24.000Z</published>
    <updated>2020-05-27T08:31:36.538Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="脑子抽了"><a class="markdownIt-Anchor" href="#脑子抽了"></a> 脑子抽了</h2><p>从4月上旬开始，突然整个人就有一种慌乱的感觉，总觉得自己什么东西都不会，走上社会将会面临着找不到工作，然后就直接失业。这是我害怕的，我害怕一毕业就失业，害怕一毕业就什么都没了，害怕自己不能养活自己，自己不能得到自己想要的生活。</p><p>开学就大四了，身边的朋友都在准备考研了，而我还在这里犹犹豫豫、恍恍惚惚的过着日子，消磨这大学里的最后一点时光。是的，这突入起来的疫情导致自己一些想法被迫改变。自己是一个<code>插班生</code>，真的，我真的很自卑，碰到本部的一些同学心理自卑到骨子里头，虽然我和他们谈论时脸上都是笑嘻嘻的，虽然这些同学并没有把我区别对待。唉。<span style="border-bottom: 1px dashed #389fff;"><span class="hint--top hint--rounded hint--info" aria-label="在前女友面前我也有这样的感觉，自己配不上她。至于之后分手了那是后话了" ontouchstart>唉。</span></span></p><p>想要改变自己，就得提升自我水平。给自己定了一个很绝的高度（打了我自己之前的<a href="https://chuyuxuan.xyz/2020/01/01/%E2%96%B6%E7%94%9F%E6%B4%BB%E6%97%A5%E5%B8%B8/2020/">脸</a>）。上海的一所大学。今年的复试线是327，历年平均线算下来是325.那么，我自己要想达到这样的水平，自己分割一下成绩，也就是</p><table><thead><tr><th style="text-align:center">政治（100）</th><th style="text-align:center">英语（100）</th><th style="text-align:center">数一（150）</th><th style="text-align:center">专业（150）</th></tr></thead><tbody><tr><td style="text-align:center">60-65</td><td style="text-align:center">45-50</td><td style="text-align:center">100-110</td><td style="text-align:center">120-135</td></tr></tbody></table><p>总分在<code>325~360</code>这个区间内才有机会。看到<a href="https://tomotoes.com/blog/no-sense/" target="_blank" rel="noopener">番茄大佬</a>想冲刺一下<code>吉林大学</code>，我又觉得自己可以了。<br>其实考本校要简单的多，本校的计算机在湖南也挺厉害的。自己打算毕业了之后就在长沙工作。但自己骨子里又有一种莫名的冲劲，觉得自己还可以再冲一冲，冲进自己理想的高度。</p><p>和大佬一样，总有这种感觉，老是喜欢沉浸在回忆里，要是当初怎么怎么样就好了。。呵呵呵，道理都懂，就是抵触不了大脑的瞎想，自制力太差太差。假如回到学校，一群室友嘻嘻哈哈的，自己估计也会被他们带偏。目前自己越来越像高考那段时间研究起自己的分数来，然而最终结果是没能达到自己想要达到的高度，整天太神经兮兮了。现在我不知道自己到底是个什么水平。</p><p>这样吧，给自己立了个flag，在5月31号，完成以下，必须完成。否则我这个傻逼样子根本就无法考研。</p><div class="note success">            <p>1.考研单词《红宝书》背诵到<code>1000</code>词。 现在已经完成了将近<code>200</code>了.能提早完成就提早完成，后面还要复习巩固。<br>2.考研数学仔细复习到<code>多元微分学</code>。 跟着李老师来的，努力把自己提高到想要的分数。<br>3.完成《660》题目，学到哪做到哪。<br>4.体重到69kg。要运动，不然自己又胖了，现在BMI还没到22，怎么谈健康？</p>          </div><p>不给自己立太多的flag，要一步一步来，5月31号的自己，你看到这里了吧？一定！一定! 全部完成了！爱你！<strong>这不是头脑发热！孩子！</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; 
      
    
    </summary>
    
    
      <category term="▶生活日常" scheme="https://chuyuxuan.xyz/categories/%E2%96%B6%E7%94%9F%E6%B4%BB%E6%97%A5%E5%B8%B8/"/>
    
    
      <category term="随笔" scheme="https://chuyuxuan.xyz/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>IEDA配置Tomcat创建web项目</title>
    <link href="https://chuyuxuan.xyz/2020/04/15/%E2%96%B6%E5%89%8D%E7%AB%AF/javaWeb/%E8%AE%B0%E5%BD%95IEDA%E9%85%8D%E7%BD%AE/"/>
    <id>https://chuyuxuan.xyz/2020/04/15/%E2%96%B6%E5%89%8D%E7%AB%AF/javaWeb/%E8%AE%B0%E5%BD%95IEDA%E9%85%8D%E7%BD%AE/</id>
    <published>2020-04-15T04:30:00.000Z</published>
    <updated>2020-04-15T11:14:47.466Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="吐槽"><a class="markdownIt-Anchor" href="#吐槽"></a> 吐槽</h1><p>讲真，要不是学校要求学，我是不会碰<code>jsp</code>这项技术的。就类似于<a href="https://chuyuxuan.xyz/2020/04/06/%E2%96%B6%E5%89%8D%E7%AB%AF/jQuery/jQuery%E5%85%A5%E9%97%A8/"><em>jQuery</em></a>一样。耦合性强，前后端不分离，这些不适合现在了。但听一些前辈们说仍然有一小部分公司还在用这项技术。当然，包括我们学校的官网。不过吐槽归吐槽，学分摆在那里，你不得不去写。什么？不想？不想学还看我这篇文章干嘛~</p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/laugh/shakinghead.png" data-fancybox="group" data-caption="shakinghead " class="fancybox"><img alt="shakinghead " title="shakinghead " data-src="https://gitee.com/chuyuxuan/tuc/raw/master/laugh/shakinghead.png" class="lazyload"></a><h1 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h1><ul><li>下载<a href="https://mirrors.tuna.tsinghua.edu.cn/apache/tomcat/tomcat-9/v9.0.34/bin/apache-tomcat-9.0.34.exe" target="_blank" rel="noopener"><em>Tomcat</em></a></li></ul><p>这里我是直接外链到<code>win10</code>环境直装的<code>tomcat 9.0</code>，如果你使用的是<code>MacOS</code>或者<code>Linux</code>。稍微抱歉一下。</p><div class="note danger">            <p>注意，安装路径请确保你有足够的权限访问，否则后面会出现环境运行无权限。<font style="font-weight:bold;color:red;">建议默认安装在C盘。</font></p>          </div><p>具体安装步骤我这里就不给出了，可以自行<a href="https://www.google.com" target="_blank" rel="noopener"><em>Google</em></a>。唯一要注意一点的是端口号没有特别的需求默认<code>8080</code>端口即可。</p><h1 id="配置"><a class="markdownIt-Anchor" href="#配置"></a> 配置</h1><ul><li>我的IEDA版本是2019.1.3</li></ul><ol><li>打开<code>IEDA</code>，新建一个<code>空项目</code>。并且给命名。</li></ol><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Java_web/1.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Java_web/1.gif" class="lazyload"></a></p><ol start="2"><li>创建好了JavaWeb项目要配置一下文件夹路径，首先在<code>web/WEB-INF</code>文件夹下面创建两个文件夹：<code>class</code>和<code>lib</code>.<code>class</code>用来存放编译后输出的<code>classes</code>文件，<code>lib</code>用于存放第三方的<code>jar</code>包。</li></ol><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Java_web/2.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Java_web/2.gif" class="lazyload"></a></p><ol start="3"><li><code>File</code>=&gt;<code>Project Structure</code>=&gt;<code>Module</code>=&gt;<code>Paths</code>=&gt;<code>Use module compile output path</code> ，点击后面的<code>...</code>将<code>Output path</code>和<code>Test output path</code>都选择刚刚创建的<code>class</code>文件夹,点击<code>Apply</code>。</li></ol><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Java_web/3.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Java_web/3.gif" class="lazyload"></a></p><ol start="4"><li>接着选择<code>Dependencies</code> ,将<code>Module SDK</code>选择为自己的<code>JDK</code>. 点击右边的<code>“+”</code>号 ,选择<code>Jars or Directories</code>。配置到刚刚创建好的<code>lib</code>文件中。</li></ol><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Java_web/4.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Java_web/4.gif" class="lazyload"></a></p><ol start="5"><li>打开菜单<code>Run</code> 选择<code>Edit Configuration</code>也可以点击右上方的往下的三角旁边的白框框选择<code>Edit Configuration</code>,点击<code>“+”</code>号选择<code>Tomcat Server</code>,选择<code>Local</code>。在<code>Name</code>处创建<code>Tomcat</code>名字，点击<code>Application server</code>后面的<code>Configure...</code>，弹出<code>Tomcat Server</code>窗口，选择本地安装的<code>Tomcat</code>文件路径. 设置<code>HTTP port</code>和<code>JMX port</code>（默认值即可），点击 <code>Apply</code>.</li></ol><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Java_web/5.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Java_web/5.gif" class="lazyload"></a></p><ol start="6"><li>至此Tomcat配置完成。 下一步在Tomcat中部署并运行项目 <code>Run</code> , <code>Edit Configurations</code>，进入<code>Run/Debug Configurations</code>窗口 ,选择刚刚建立的Tomcat容器,选择<code>Deployment</code>,点击右边的<code>“+”</code>号 ,选择<code>Artifact</code>,选择<code>web</code>项目,<code>Application contex</code>填一个名字。注意，tomcat的路径需要手动在<code>startup/Connection</code>中配置好。</li></ol><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Java_web/6.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Java_web/6.gif" class="lazyload"></a></p><h1 id="运行"><a class="markdownIt-Anchor" href="#运行"></a> 运行</h1><ol start="7"><li>好啦！来运行项目看看！选择<code>index.jsp</code>，修改里面的代码内容，嘻嘻！成功运行！</li></ol><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Java_web/7.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Java_web/7.gif" class="lazyload"></a></p><h1 id="问题可能出现"><a class="markdownIt-Anchor" href="#问题可能出现"></a> 问题（可能出现）</h1><div class="note danger">            <p>注意，若出现：<code>Error running 'Tomcat 8.5.45': port out of range:-1 &amp;&amp; 淇℃伅 [main] org.apache.catalina</code>。</p><ul><li><p>请在<code>tomcat</code>安装目录下进入<code>conf/server.xml</code> ，把里面的<code>sever port = &quot;-1&quot;</code>改成1028（大于1024不等于8080即可）。</p></li><li><p>修改logging.properties 文件里面的<code>java.util.logging.ConsoleHandler.encoding = UTF-8</code>为<code>java.util.logging.ConsoleHandler.encoding = GBK</code></p></li></ul>          </div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; 
      
    
    </summary>
    
    
      <category term="▶前端" scheme="https://chuyuxuan.xyz/categories/%E2%96%B6%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="tomcat" scheme="https://chuyuxuan.xyz/tags/tomcat/"/>
    
      <category term="IDEA" scheme="https://chuyuxuan.xyz/tags/IDEA/"/>
    
      <category term="Java Web" scheme="https://chuyuxuan.xyz/tags/Java-Web/"/>
    
  </entry>
  
  <entry>
    <title>全屏预览插件及其属性</title>
    <link href="https://chuyuxuan.xyz/2020/04/12/%E2%96%B6%E5%89%8D%E7%AB%AF/jQuery/jQuery%E5%85%A8%E5%B1%8F%E9%A2%84%E8%A7%88/"/>
    <id>https://chuyuxuan.xyz/2020/04/12/%E2%96%B6%E5%89%8D%E7%AB%AF/jQuery/jQuery%E5%85%A8%E5%B1%8F%E9%A2%84%E8%A7%88/</id>
    <published>2020-04-12T13:00:00.000Z</published>
    <updated>2020-04-13T13:05:03.009Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="算得上是前言"><a class="markdownIt-Anchor" href="#算得上是前言"></a> 算得上是前言</h1><p><font color="#0ff"><s>*再不开学我要被家里人嫌弃死了。*🤣</s></font></p><p>无意间闲逛<code>iPhone11</code>的<a href="https://www.apple.com.cn/iphone-11-pro/" target="_blank" rel="noopener">官网</a>时，<s>当然是闲的蛋疼</s> 被它的宣传广告给深深吸引。全程我震惊不断：卧槽，这个动画可以这样玩？欸？！视频直接进入动画了？！6666！</p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/laugh/amazing.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/laugh/amazing.png" class="lazyload"></a><br>不得不感叹苹果不愧是业界大佬，钦佩钦佩。我只会<s>面向GitHub编程</s>。这不，最近几天在研究<code>jQuery</code>，突然就搜到了这个全屏滚动插件，效果是真的棒！我表示很喜欢！感谢作者！！</p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/20200412.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/20200412.gif" class="lazyload"></a></p><h1 id="使用方法"><a class="markdownIt-Anchor" href="#使用方法"></a> 使用方法</h1><p>1.正如上图所示，可以实现全屏滚动，这个视觉冲击可以说是杠杠的，我们只需要到GitHub上clone仓库即可。</p><p>仓库地址：<a href="https://github.com/alvarotrigo/fullPage.js" target="_blank" rel="noopener">点我访问</a></p><p><a href="https://s1.ax1x.com/2020/04/12/GOOsPI.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://s1.ax1x.com/2020/04/12/GOOsPI.gif" class="lazyload"></a></p><p>2.把<code>dist</code>里的文件分别按<code>js</code>,<code>css</code>分类放置到你的项目文件中。<br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/202004121.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/202004121.jpg" class="lazyload"></a></p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/202004122.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/202004122.jpg" class="lazyload"></a></p><p>3.在<code>html</code>文件中引入以下代码即可食用啦！</p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/laugh/watermaleon.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/laugh/watermaleon.png" class="lazyload"></a></p><h1 id="官方介绍"><a class="markdownIt-Anchor" href="#官方介绍"></a> 官方介绍</h1><p>国内演示地址：<a href="https://www.dowebok.com/demo/2014/77/" target="_blank" rel="noopener">点我访问</a></p><h2 id="fullpagejs-是一个基于-jquery-的插件它能够很方便-很轻松的制作出全屏网站主要功能有"><a class="markdownIt-Anchor" href="#fullpagejs-是一个基于-jquery-的插件它能够很方便-很轻松的制作出全屏网站主要功能有"></a> fullPage.js 是一个基于 jQuery 的插件，它能够很方便、很轻松的制作出全屏网站，主要功能有：</h2><ul><li>支持鼠标滚动</li><li>支持前进后退和键盘控制</li><li>多个回调函数</li><li>支持手机、平板触摸事件</li><li>支持 CSS3 动画</li><li>支持窗口缩放</li><li>窗口缩放时自动调整</li><li>可设置滚动宽度、背景颜色、滚动速度、循环选项、回调、文本对齐方式等等</li></ul><h2 id="兼容性"><a class="markdownIt-Anchor" href="#兼容性"></a> 兼容性</h2><p>兼容 jQuery 1.7+。</p><h3 id="浏览器兼容"><a class="markdownIt-Anchor" href="#浏览器兼容"></a> 浏览器兼容</h3><table><thead><tr><th style="text-align:center">IE</th><th style="text-align:center">Chrome</th><th style="text-align:center">Firefox</th><th style="text-align:center">Opera</th><th style="text-align:center">Safari</th></tr></thead><tbody><tr><td style="text-align:center">IE8+ ✔</td><td style="text-align:center">Chrome ✔</td><td style="text-align:center">Firefox ✔</td><td style="text-align:center">Opera ✔</td><td style="text-align:center">Safari ✔</td></tr></tbody></table><h2 id="引入文件"><a class="markdownIt-Anchor" href="#引入文件"></a> 引入文件</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"css/jquery.fullPage.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- jquery.easings.min.js 用于 easing 参数，也可以使用完整的 jQuery UI 代替，如果不需要设置 easing 参数，可去掉改文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/jquery.easings.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 如果 scrollOverflow 设置为 true，则需要引入 jquery.slimscroll.min.js，一般情况下不需要 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/jquery.slimscroll.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/jquery.fullPage.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h3 id="html"><a class="markdownIt-Anchor" href="#html"></a> html</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"dowebok"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"section"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>第一屏<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"section"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>第二屏<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"section"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>第三屏<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"section"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>第四屏<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>每个<code>section</code>代表一屏，默认显示<code>“第一屏”</code>，如果要指定加载页面时显示的<code>“屏幕”</code>，可以在对应的 <code>section</code>加上 <code>class=”active”</code>，如：</p><pre><code>&lt;div class=&quot;section active&quot;&gt;第三屏&lt;/div&gt;</code></pre><p>同时，可以在<code>section</code> 内加入 <code>slide</code>，如：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"dowebok"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"section"</span>&gt;</span>第一屏<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"section"</span>&gt;</span>第二屏<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"section"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"slide"</span>&gt;</span>第三屏的第一屏<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"slide"</span>&gt;</span>第三屏的第二屏<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"slide"</span>&gt;</span>第三屏的第三屏<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"slide"</span>&gt;</span>第三屏的第四屏<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"section"</span>&gt;</span>第四屏<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h3 id="javascript"><a class="markdownIt-Anchor" href="#javascript"></a> JavaScript</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="string">'#dowebok'</span>).fullpage();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><h2 id="配置"><a class="markdownIt-Anchor" href="#配置"></a> 配置</h2><h3 id="选项"><a class="markdownIt-Anchor" href="#选项"></a> 选项</h3><table><thead><tr><th style="text-align:center">选项</th><th style="text-align:center">类型</th><th style="text-align:center">默认值</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">verticalCentered</td><td style="text-align:center">字符串</td><td style="text-align:center">true</td><td style="text-align:center">内容是否垂直居中</td></tr><tr><td style="text-align:center">resize</td><td style="text-align:center">布尔值</td><td style="text-align:center">false</td><td style="text-align:center">字体是否随着窗口缩放而缩放</td></tr><tr><td style="text-align:center">slidesColor</td><td style="text-align:center">函数</td><td style="text-align:center">无</td><td style="text-align:center">设置背景颜色</td></tr><tr><td style="text-align:center">anchors</td><td style="text-align:center">数组</td><td style="text-align:center">无</td><td style="text-align:center">定义锚链接</td></tr><tr><td style="text-align:center">scrollingSpeed</td><td style="text-align:center">整数</td><td style="text-align:center">700</td><td style="text-align:center">滚动速度，单位为毫秒</td></tr><tr><td style="text-align:center">easing</td><td style="text-align:center">字符串</td><td style="text-align:center"></td><td style="text-align:center">easeInQuart滚动动画方式</td></tr><tr><td style="text-align:center">menu</td><td style="text-align:center">布尔值</td><td style="text-align:center">false</td><td style="text-align:center">绑定菜单，设定的相关属性与 anchors 的值对应后，菜单可以控制滚动</td></tr><tr><td style="text-align:center">navigation</td><td style="text-align:center">布尔值</td><td style="text-align:center">false</td><td style="text-align:center">是否显示项目导航</td></tr><tr><td style="text-align:center">navigationPosition</td><td style="text-align:center">字符串</td><td style="text-align:center">right</td><td style="text-align:center">项目导航的位置，可选 left 或 right</td></tr><tr><td style="text-align:center">navigationColor</td><td style="text-align:center">字符串</td><td style="text-align:center">#000</td><td style="text-align:center">项目导航的颜色</td></tr><tr><td style="text-align:center">navigationTooltips</td><td style="text-align:center">数组</td><td style="text-align:center">空</td><td style="text-align:center">项目导航的 tip</td></tr><tr><td style="text-align:center">slidesNavigation</td><td style="text-align:center">布尔值</td><td style="text-align:center">false</td><td style="text-align:center">是否显示左右滑块的项目导航</td></tr><tr><td style="text-align:center">slidesNavPosition</td><td style="text-align:center">字符串</td><td style="text-align:center">bottom</td><td style="text-align:center">左右滑块的项目导航的位置，可选 top 或 bottom</td></tr><tr><td style="text-align:center">controlArrowColor</td><td style="text-align:center">字符串</td><td style="text-align:center">#fff</td><td style="text-align:center">左右滑块的箭头的背景颜色</td></tr><tr><td style="text-align:center">loopBottom</td><td style="text-align:center">布尔值</td><td style="text-align:center">false</td><td style="text-align:center">滚动到最底部后是否滚回顶部</td></tr><tr><td style="text-align:center">loopTop</td><td style="text-align:center">布尔值</td><td style="text-align:center">false</td><td style="text-align:center">滚动到最顶部后是否滚底部</td></tr><tr><td style="text-align:center">loopHorizontal</td><td style="text-align:center">布尔值</td><td style="text-align:center">true</td><td style="text-align:center">左右滑块是否循环滑动</td></tr><tr><td style="text-align:center">autoScrolling</td><td style="text-align:center">布尔值</td><td style="text-align:center">true</td><td style="text-align:center">是否使用插件的滚动方式，如果选择 false，则会出现浏览器自带的滚动条、</td></tr><tr><td style="text-align:center">scrollOverflow</td><td style="text-align:center">布尔值</td><td style="text-align:center">false</td><td style="text-align:center">内容超过满屏后是否显示滚动条</td></tr><tr><td style="text-align:center">css3</td><td style="text-align:center">布尔值</td><td style="text-align:center">false</td><td style="text-align:center">是否使用 CSS3 transforms 滚动</td></tr><tr><td style="text-align:center">paddingTop</td><td style="text-align:center">字符串</td><td style="text-align:center">0</td><td style="text-align:center">与顶部的距离</td></tr><tr><td style="text-align:center">paddingBottom</td><td style="text-align:center">字符串</td><td style="text-align:center">0</td><td style="text-align:center">与底部距离</td></tr><tr><td style="text-align:center">fixedElements</td><td style="text-align:center">字符串</td><td style="text-align:center">无</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">normalScrollElements</td><td style="text-align:center">无</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">keyboardScrolling</td><td style="text-align:center">布尔值</td><td style="text-align:center">true</td><td style="text-align:center">是否使用键盘方向键导航</td></tr><tr><td style="text-align:center">touchSensitivity</td><td style="text-align:center">整数</td><td style="text-align:center">5</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">continuousVertical</td><td style="text-align:center">布尔值</td><td style="text-align:center">false</td><td style="text-align:center">是否循环滚动，与 loopTop 及 loopBottom 不兼容</td></tr><tr><td style="text-align:center">animateAnchor</td><td style="text-align:center">布尔值</td><td style="text-align:center">true</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">normalScrollElementTouchThreshold</td><td style="text-align:center">整数</td><td style="text-align:center">5</td><td style="text-align:center"></td></tr></tbody></table><h3 id="方法"><a class="markdownIt-Anchor" href="#方法"></a> 方法</h3><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">moveSectionUp()</td><td style="text-align:center">向上滚动</td></tr><tr><td style="text-align:center">moveSectionDown()</td><td style="text-align:center">向下滚动</td></tr><tr><td style="text-align:center">moveTo(section, slide)</td><td style="text-align:center">滚动到</td></tr><tr><td style="text-align:center">moveSlideRight()</td><td style="text-align:center">slide向右滚动</td></tr><tr><td style="text-align:center">moveSlideLeft()</td><td style="text-align:center">slide 向左滚动</td></tr><tr><td style="text-align:center">setAutoScrolling()</td><td style="text-align:center">设置页面滚动方式，设置为 true 时自动滚动</td></tr><tr><td style="text-align:center">setAllowScrolling()</td><td style="text-align:center">添加或删除鼠标滚轮/触控板控制</td></tr><tr><td style="text-align:center">setKeyboardScrolling()</td><td style="text-align:center">添加或删除键盘方向键控制</td></tr><tr><td style="text-align:center">setScrollingSpeed()</td><td style="text-align:center">定义以毫秒为单位的滚动速度</td></tr></tbody></table><h3 id="回调函数"><a class="markdownIt-Anchor" href="#回调函数"></a> 回调函数</h3><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">afterLoad</td><td style="text-align:center">滚动到某一屏后的回调函数，接收 anchorLink 和 index 两个参数，anchorLink 是锚链接的名称，index 是序号，从1开始计算</td></tr><tr><td style="text-align:center">onLeave</td><td style="text-align:center">滚动前的回调函数，接收 index、nextIndex 和 direction 3个参数：index 是离开的“页面”的序号，从1开始计算；</td></tr><tr><td style="text-align:center">nextIndex</td><td style="text-align:center">是滚动到的“页面”的序号，从1开始计算；</td></tr><tr><td style="text-align:center">direction</td><td style="text-align:center">判断往上滚动还是往下滚动，值是 up 或 down。</td></tr><tr><td style="text-align:center">afterRender</td><td style="text-align:center">页面结构生成后的回调函数，或者说页面初始化完成后的回调函数</td></tr><tr><td style="text-align:center">afterSlideLoad</td><td style="text-align:center">滚动到某一水平滑块后的回调函数，与 afterLoad 类似，接收 anchorLink、index、slideIndex、direction 4个参数</td></tr><tr><td style="text-align:center">onSlideLeave</td><td style="text-align:center">某一水平滑块滚动前的回调函数，与 onLeave 类似，接收 anchorLink、index、slideIndex、direction 4个参数</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; 
      
    
    </summary>
    
    
      <category term="▶前端" scheme="https://chuyuxuan.xyz/categories/%E2%96%B6%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="jQuery" scheme="https://chuyuxuan.xyz/tags/jQuery/"/>
    
      <category term="fullpage" scheme="https://chuyuxuan.xyz/tags/fullpage/"/>
    
  </entry>
  
  <entry>
    <title>关于的jQuery小知识以及碎碎念</title>
    <link href="https://chuyuxuan.xyz/2020/04/06/%E2%96%B6%E5%89%8D%E7%AB%AF/jQuery/jQuery%E5%85%A5%E9%97%A8/"/>
    <id>https://chuyuxuan.xyz/2020/04/06/%E2%96%B6%E5%89%8D%E7%AB%AF/jQuery/jQuery%E5%85%A5%E9%97%A8/</id>
    <published>2020-04-06T13:00:00.000Z</published>
    <updated>2020-04-13T13:05:03.010Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="碎碎念"><a class="markdownIt-Anchor" href="#碎碎念"></a> 碎碎念</h1><p>是的，很多人认为<code>jQuery</code>并不是一个好用的框架，像什么<code>Vue</code>啊，<code>React</code>啊，<code>Angular</code>啊，这些才算的上一个高大上的框架。但是，存在还是有一定的道理的，就像是没有jQuery这样的简化JavaScript的框架，当作<code>前浪</code>，vue等后面框架的面世，还是需要一点变革的。</p><p><code>那么我为什么会开始学习jQuery？</code>这个问题问得好，因为学校要求学🤣。就像学校现在还要求我们学习在现在的互联网公司不会用的<span style="border-bottom: 1px dashed #389fff;"><span class="hint--top hint--rounded hint--info" aria-label="主要是现在有更好的框架去代替，而且效率还高。" ontouchstart>过时了</span></span>的<code>jsp</code>一样。嘛~，我这不是抱怨，算是一种考古哈哈。就比如说哪一天，突然间出现了一个十分强大的前端框架，直接把我上面刚刚所说的架构全部给代替了，那么我们现在所学的，所认为的前沿框架在那个时候的人看来，不也是过时之物么？技术永远是在发展的，这里呢，我就抱着一颗虔诚之心🧡，好好的把学校里安排的知识给稍微美化整理一下。那么，开始嘻嘻！<br>===<mark><mark><mark><mark><mark><mark><mark>我是分界线</mark></mark></mark></mark></mark></mark></mark></p><h1 id="jquery入门"><a class="markdownIt-Anchor" href="#jquery入门"></a> jQuery入门</h1><h2 id="1-环境安装"><a class="markdownIt-Anchor" href="#1-环境安装"></a> 1. 环境安装</h2><p>安装环境是使用<code>jQuery</code>的第一步，如果你需要在本地运行jQuery，可以查看<a href="https://jquery.com/" target="_blank" rel="noopener">官网</a>来安装jQuery库。这里推荐使用官方定制的CDN进行引入，当然，这在网上是可以搜寻到的。</p><h2 id="2-第一个程序"><a class="markdownIt-Anchor" href="#2-第一个程序"></a> 2. 第一个程序</h2><p>在<code>&lt;div id=&quot;box&quot;&gt;&lt;/div&gt;</code>里填充内容<code>hello,jquery</code>。实现的效果。<br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image001.gif" data-fancybox="group" data-caption="1" class="fancybox"><img alt="1" title="1" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image001.gif" class="lazyload"></a></p><p>这里用<code>javascript</code>先实现一下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> box = <span class="built_in">document</span>.getElementById(<span class="string">"box"</span>);</span><br><span class="line">box.innerHTML = <span class="string">"hello,jquery"</span>;</span><br></pre></td></tr></table></figure></div><p>用<code>jQuery</code>实现会更简单，下面每一步都和上面的相对应，实现如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> box = $(<span class="string">"#box"</span>);</span><br><span class="line">box.html(<span class="string">"hello,jquery"</span>);</span><br></pre></td></tr></table></figure></div><p>从上面可以看出：</p><ul><li><p><code>$(&quot;#box&quot;)</code>是获取到<code>id=&quot;box&quot;</code>的<code>div</code></p></li><li><p><code>html()</code>方法是获取元素的内容（包括HTML标记）， <code>()</code>里面没有内容表示获取，有内容表示赋值。</p></li></ul><p>基本语法：</p><pre><code> $(selector).action()</code></pre><p>说明:</p><ul><li><code>jQuery</code>用美元符号<code>$</code>定义；</li><li><code>selector</code>表示要操作的<code>dom</code>元素；</li><li><code>action</code>表示要执行的操作。</li></ul><h2 id="3-基本选择器"><a class="markdownIt-Anchor" href="#3-基本选择器"></a> 3. 基本选择器</h2><p>和<code>CSS</code>一样，<code>jQuery</code>也有基本选择器，我们先来看一下源码：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">"box1"</span>&gt;我是id选择器&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;p class="box2"&gt;&lt;/</span>p&gt;</span><br><span class="line">&lt;span&gt;&lt;<span class="regexp">/span&gt;</span></span><br></pre></td></tr></table></figure></div><h3 id="id选择器"><a class="markdownIt-Anchor" href="#id选择器"></a> id选择器</h3><p>对于上面 <code>id=&quot;box1&quot;</code>的<code>div</code>，用<code>jquery</code>实现如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> box1 = $(<span class="string">"#box1"</span>);</span><br><span class="line">box1.html();</span><br></pre></td></tr></table></figure></div><p>效果如下（下面div获取上面div的内容）：<br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image003.gif" data-fancybox="group" data-caption="2" class="fancybox"><img alt="2" title="2" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image003.gif" class="lazyload"></a><br>从上面可以看出，id选择器语法：</p><pre><code>$(&quot;# + idName&quot;)</code></pre><p>这里再提醒一下：<br><code>html()：</code>里的 <code>()</code>里有内容，表示往该元素添加内容，没有内容，表示获取内容。</p><h3 id="类选择器"><a class="markdownIt-Anchor" href="#类选择器"></a> 类选择器</h3><p>对于上面<code>class=&quot;box2&quot;</code>的 <code>p</code>， 用<code>jQuery</code> 实现如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> box2 = $(<span class="string">".box2"</span>);</span><br><span class="line">box2.html(<span class="string">"我是类选择器"</span>);</span><br></pre></td></tr></table></figure></div><p>效果如下：<br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image004.gif" data-fancybox="group" data-caption="3" class="fancybox"><img alt="3" title="3" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image004.gif" class="lazyload"></a><br>从上面可以看出,类选择器语法：</p><pre><code>$(&quot;. + className&quot;)</code></pre><h3 id="元素选择器"><a class="markdownIt-Anchor" href="#元素选择器"></a> 元素选择器</h3><p>对于上面 <code>&lt;span&gt;&lt;/span&gt;</code>， 用<code>jQuery</code>实现如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> box3 = $(<span class="string">"span"</span>);</span><br><span class="line">box3.html(<span class="string">"我是元素选择器"</span>);</span><br></pre></td></tr></table></figure></div><p>效果如下：<br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image005.gif" data-fancybox="group" data-caption="4" class="fancybox"><img alt="4" title="4" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image005.gif" class="lazyload"></a></p><p>从上面可以看出,元素选择器语法：</p><pre><code>$(&quot;tagName&quot;)</code></pre><h3 id="过滤选择器重点"><a class="markdownIt-Anchor" href="#过滤选择器重点"></a> 过滤选择器(重点)</h3><p>例如，现有代码如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>第一个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>第二个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>第三个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>第四个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>第五个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>第六个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>基础效果图如下：<br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image010.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image010.png" class="lazyload"></a></p><p>现在分别获取获取指定的<code>li</code>元素，并添加相应的背景色。</p><ul><li>获取<strong>第一个</strong><code>li</code>标签，添加背景色<code>orange</code>：</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"li:first"</span>).css(<span class="string">"background"</span>,<span class="string">"orange"</span>)</span><br><span class="line"><span class="string">``</span><span class="string">` </span></span><br><span class="line"><span class="string">+ 获取最**后一个**`</span>li<span class="string">`标签，添加背景色`</span>green<span class="string">` :</span></span><br><span class="line"><span class="string">`</span><span class="string">``</span>js</span><br><span class="line">$(<span class="string">"li:last"</span>).css(<span class="string">"background"</span>,<span class="string">"green"</span>)；</span><br><span class="line"><span class="string">``</span><span class="string">` </span></span><br><span class="line"><span class="string">效果图如下：</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">![](https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image012.png)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">- 获取下标为`偶数`的li标签，添加背景色`#ccc`：</span><br><span class="line"><span class="string">``</span><span class="string">`js</span></span><br><span class="line"><span class="string">$("li:even").css("background","#eee");</span></span><br></pre></td></tr></table></figure></div><ul><li>获取下标为<code>奇数</code>的li标签，添加背景色<code>#ccc</code>:</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"li:odd"</span>).css(<span class="string">"background"</span>,<span class="string">"#ccc"</span>);</span><br></pre></td></tr></table></figure></div><p>效果图如下：</p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image014.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image014.png" class="lazyload"></a></p><p><strong>注：下标是从0开始的，li标签第一个下标是0，是偶数，所以背景色是&quot;#eee&quot;。</strong></p><h4 id="eq选择器"><a class="markdownIt-Anchor" href="#eq选择器"></a> <code>:eq</code>选择器</h4><ul><li>获取指定序号的元素<br>例如，现有一下代码：</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span>第一个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span>第二个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span>第三个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image019.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image019.png" class="lazyload"></a></p><p>实现<code>第二个li标签</code>背景色为红色.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"li:eq(1)"</span>).css(<span class="string">"background"</span>,<span class="string">"red"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//或者</span></span><br><span class="line"></span><br><span class="line">$(<span class="string">"li"</span>).eq(<span class="number">1</span>).css(<span class="string">"background"</span>,<span class="string">"red"</span>);</span><br><span class="line"></span><br><span class="line"> <span class="comment">//eq 选择器的下标是从0开始</span></span><br></pre></td></tr></table></figure></div><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image021.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image021.png" class="lazyload"></a></p><h4 id="not选择器"><a class="markdownIt-Anchor" href="#not选择器"></a> :not选择器</h4><p>倘若我们要实现这样的效果：</p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image025.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image025.png" class="lazyload"></a></p><p>第<code>四个li标签</code>的右侧<code>没有外边距</code>,<code>not选择器</code>，它选取<code>除了指定元素以外</code>的所有元素:</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"li:not(:last)"</span>).css(<span class="string">"margin-right"</span>,<span class="string">"20px"</span>);</span><br></pre></td></tr></table></figure></div><p>效果如下：</p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image026.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image026.png" class="lazyload"></a></p><h3 id="层次选择器"><a class="markdownIt-Anchor" href="#层次选择器"></a> 层次选择器</h3><p>有如下代码：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">span</span>&gt;</span>第一个p标签下的span<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">span</span>&gt;</span>第一个p标签下的第二个span<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">i</span>&gt;</span>i标签<span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">span</span>&gt;</span>第二个p标签下的span<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>若想要获取到上面<code>第一个p标签</code>下所有的<code>span</code>标签,可以按照以下步骤：</p><ol><li><p>获取到类<em>container</em>：<code>$(&quot;.container&quot;);</code></p></li><li><p>获取到<em>container</em>下第一个<em>p</em>标签：<code>$(&quot;.container p:first&quot;);</code></p></li><li><p>获取到第一个p标签下所有的<em>span</em>标签：<code>$(&quot;.container p:first span&quot;)</code>。</p></li></ol><p><strong>层次选择器和Dom结构是相匹配的.</strong></p><h3 id="show与hide"><a class="markdownIt-Anchor" href="#show与hide"></a> show()与hide()</h3><p>有如下代码：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"toggle"</span>&gt;</span>错误提醒<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>展示的内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>对于<code>类toggle</code>，有错误时需要出现，解决了错误需要隐藏。</p><ul><li><p>出现：$(&quot;.toggle&quot;).show()</p><p>相当于css中的<code>display:block;</code></p></li><li><p>隐藏：$(&quot;.toggle&quot;).hide()</p><p>相当于css中的 <code>display:none;</code></p></li></ul><h3 id="类的添加和删除"><a class="markdownIt-Anchor" href="#类的添加和删除"></a> 类的添加和删除</h3><p>有如下代码：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">"box"</span>&gt;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">   /</span><span class="regexp">/假如要给div添加类active和btn</span></span><br><span class="line"><span class="regexp">   active&#123; background: orange;&#125;</span></span><br><span class="line"><span class="regexp">btn&#123;&#125;</span></span><br></pre></td></tr></table></figure></div><p>假如要给div添加类<code>active</code>和<code>btn</code>,这里用<code>addClass()</code>方法：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#box"</span>).addClass(<span class="string">"active btn"</span>);</span><br></pre></td></tr></table></figure></div><p>现在要删除一个类btn，这里用removeClass()方法：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#box"</span>).removeClass(<span class="string">"btn"</span>);</span><br><span class="line"><span class="string">`</span></span><br></pre></td></tr></table></figure></div><h2 id="4-设置css属性"><a class="markdownIt-Anchor" href="#4-设置css属性"></a> 4. 设置css属性</h2><h3 id="设置单个属性"><a class="markdownIt-Anchor" href="#设置单个属性"></a> 设置单个属性</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">"single"</span>&gt;设置单个属性&lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure></div><p>如果给上面的<code>div</code>标签添加<code>css</code>属性：<code>background：orange;</code>对于<code>div</code>标签，用jQuery可以这样写：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#single"</span>).css(<span class="string">"background"</span>,<span class="string">"orange"</span>);</span><br></pre></td></tr></table></figure></div><p>效果如下：</p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image008.gif" data-fancybox="group" data-caption="4" class="fancybox"><img alt="4" title="4" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image008.gif" class="lazyload"></a></p><p>这是设置单个属性常用的方法。语法总结如下：</p><pre><code>$(selector).css(attr,value);</code></pre><h3 id="设置多个属性"><a class="markdownIt-Anchor" href="#设置多个属性"></a> 设置多个属性</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">"more"</span>&gt;设置多个属性&lt;<span class="regexp">/p&gt;</span></span><br></pre></td></tr></table></figure></div><p>如果给上面的<code>p</code>标签添加<code>css</code>属性：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">"<span class="selector-tag">background</span>"<span class="selector-pseudo">:"</span><span class="selector-id">#ccc</span>";</span><br><span class="line">"<span class="selector-tag">text-align</span>"<span class="selector-pseudo">:"center"</span>;</span><br><span class="line">"<span class="selector-tag">line-height</span>"<span class="selector-pseudo">:"40px"</span>;</span><br></pre></td></tr></table></figure></div><p>对于<code>p</code>标签，用上面的方法一条一条的写，也是可以的，但是比较麻烦，下面是设置多个css属性的方法：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">".more"</span>).css(&#123;</span><br><span class="line"><span class="string">"background"</span>:<span class="string">"#ccc"</span>,</span><br><span class="line"><span class="string">"text-align"</span>:<span class="string">"center"</span>,</span><br><span class="line"><span class="string">"line-height"</span>:<span class="string">"40px"</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></div><p>效果如下：</p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image009.gif" data-fancybox="group" data-caption="5" class="fancybox"><img alt="5" title="5" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image009.gif" class="lazyload"></a></p><p>可以看出，设置多个css属性是用对象的方式来实现的。语法总结如下:</p><pre><code>$(selector).css({attr1: value1,attr2: value2,...})</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; 
      
    
    </summary>
    
    
      <category term="▶前端" scheme="https://chuyuxuan.xyz/categories/%E2%96%B6%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="jQuery" scheme="https://chuyuxuan.xyz/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>CSS框架思维导图</title>
    <link href="https://chuyuxuan.xyz/2020/03/30/%E2%96%B6%E5%89%8D%E7%AB%AF/CSS/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/CSS%E7%9F%A5%E8%AF%86%E6%A1%86%E6%9E%B6/"/>
    <id>https://chuyuxuan.xyz/2020/03/30/%E2%96%B6%E5%89%8D%E7%AB%AF/CSS/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/CSS%E7%9F%A5%E8%AF%86%E6%A1%86%E6%9E%B6/</id>
    <published>2020-03-30T02:00:35.000Z</published>
    <updated>2020-04-13T13:05:03.011Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="把css各个知识体系稍微串了一下花的时间要多余html"><a class="markdownIt-Anchor" href="#把css各个知识体系稍微串了一下花的时间要多余html"></a> 把css各个知识体系稍微串了一下，花的时间要多余html.🤪</h1><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/CSS/CSS.svg" data-fancybox="group" data-caption="svg" class="fancybox"><img alt="svg" title="svg" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/CSS/CSS.svg" class="lazyload"></a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; 
      
    
    </summary>
    
    
      <category term="▶前端" scheme="https://chuyuxuan.xyz/categories/%E2%96%B6%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端" scheme="https://chuyuxuan.xyz/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="CSS" scheme="https://chuyuxuan.xyz/tags/CSS/"/>
    
      <category term="框架" scheme="https://chuyuxuan.xyz/tags/%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>html框架思维导图</title>
    <link href="https://chuyuxuan.xyz/2020/03/26/%E2%96%B6%E5%89%8D%E7%AB%AF/CSS/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/html/"/>
    <id>https://chuyuxuan.xyz/2020/03/26/%E2%96%B6%E5%89%8D%E7%AB%AF/CSS/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/html/</id>
    <published>2020-03-26T09:49:35.000Z</published>
    <updated>2020-04-13T13:05:03.011Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="稍微抽个时间把html各个知识体系串了一下虽然不全但是可用"><a class="markdownIt-Anchor" href="#稍微抽个时间把html各个知识体系串了一下虽然不全但是可用"></a> 稍微抽个时间把html各个知识体系串了一下，虽然不全，但是可用</h1><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/CSS/html_framework.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/CSS/html_framework.jpg" class="lazyload"></a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; 
      
    
    </summary>
    
    
      <category term="▶前端" scheme="https://chuyuxuan.xyz/categories/%E2%96%B6%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端" scheme="https://chuyuxuan.xyz/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="html" scheme="https://chuyuxuan.xyz/tags/html/"/>
    
      <category term="思维导图" scheme="https://chuyuxuan.xyz/tags/%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>爬虫链接地址</title>
    <link href="https://chuyuxuan.xyz/2020/03/21/%E2%96%B6%E5%B0%8F%E6%8A%80%E8%83%BD/GitHub%E7%9B%B8%E5%85%B3/%E7%88%AC%E8%99%AB%E9%93%BE%E6%8E%A5/"/>
    <id>https://chuyuxuan.xyz/2020/03/21/%E2%96%B6%E5%B0%8F%E6%8A%80%E8%83%BD/GitHub%E7%9B%B8%E5%85%B3/%E7%88%AC%E8%99%AB%E9%93%BE%E6%8E%A5/</id>
    <published>2020-03-21T01:32:00.000Z</published>
    <updated>2020-04-13T14:55:18.927Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="awesome-spider"><a class="markdownIt-Anchor" href="#awesome-spider"></a> awesome-spider</h1><p>收集各种爬虫 （默认爬虫语言为 python）, 欢迎大家 提 pr 或 issue, 收集脚本见此项目 <a href="https://github.com/facert/github_search" target="_blank" rel="noopener">github-search</a></p><h3 id="a"><a class="markdownIt-Anchor" href="#a"></a> A</h3><ul><li><a href="https://github.com/s-rah/onionscan" target="_blank" rel="noopener">暗网爬虫(Go)</a></li><li><a href="https://github.com/x-spiders/aiss-spider" target="_blank" rel="noopener">爱丝APP图片爬虫</a></li></ul><h3 id="b"><a class="markdownIt-Anchor" href="#b"></a> B</h3><ul><li><a href="https://github.com/airingursb/bilibili-user" target="_blank" rel="noopener">Bilibili 用户</a></li><li><a href="https://github.com/airingursb/bilibili-video" target="_blank" rel="noopener">Bilibili 视频</a></li><li><a href="https://github.com/chenjiandongx/bili-spider" target="_blank" rel="noopener">B站760万视频信息爬虫</a></li><li><a href="https://github.com/chokcoco/cnblogSpider" target="_blank" rel="noopener">博客园(node.js)</a></li><li><a href="https://github.com/nswbmw/micro-scraper" target="_blank" rel="noopener">百度百科(node.js)</a></li><li><a href="https://github.com/Marcus-T/Crawler_Job" target="_blank" rel="noopener">北邮人水木清华招聘</a></li><li><a href="https://github.com/gudegg/yunSpider" target="_blank" rel="noopener">百度云网盘</a></li><li><a href="https://github.com/Chion82/hello-old-driver" target="_blank" rel="noopener">琉璃神社爬虫</a></li></ul><h3 id="c"><a class="markdownIt-Anchor" href="#c"></a> C</h3><ul><li><a href="https://github.com/jackgitgz/CnblogsSpider" target="_blank" rel="noopener">cnblog</a></li><li><a href="https://github.com/LintBin/1024crawer" target="_blank" rel="noopener">caoliu 1024</a></li></ul><h3 id="d"><a class="markdownIt-Anchor" href="#d"></a> D</h3><ul><li><a href="https://github.com/lanbing510/DouBanSpider" target="_blank" rel="noopener">豆瓣读书</a></li><li><a href="https://github.com/dontcontactme/doubanspiders" target="_blank" rel="noopener">豆瓣爬虫集</a></li><li><a href="https://github.com/rockdai/haixiu" target="_blank" rel="noopener">豆瓣害羞组</a></li><li><a href="https://github.com/TheRook/subbrute" target="_blank" rel="noopener">DNS记录和子域名</a></li></ul><h3 id="e"><a class="markdownIt-Anchor" href="#e"></a> E</h3><ul><li><a href="https://github.com/shuiqukeyou/E-HentaiCrawler" target="_blank" rel="noopener">E绅士</a></li></ul><h3 id="g"><a class="markdownIt-Anchor" href="#g"></a> G</h3><ul><li><a href="https://github.com/pein0119/girl-atlas-crawler" target="_blank" rel="noopener">Girl-atlas</a></li><li><a href="https://github.com/xuelangcxy/girlCrawler" target="_blank" rel="noopener">girl13</a></li><li><a href="https://github.com/bonfy/github-trending" target="_blank" rel="noopener">github trending</a></li><li><a href="https://github.com/chenjiandongx/Github" target="_blank" rel="noopener">Github 仓库及用户分析爬虫</a></li></ul><h3 id="i"><a class="markdownIt-Anchor" href="#i"></a> I</h3><ul><li><a href="https://github.com/xTEddie/Scrapstagram" target="_blank" rel="noopener">Instagram</a></li><li><a href="https://github.com/XetRAHF/Scrapping-INC500" target="_blank" rel="noopener">INC500 世界5000强爬虫</a></li></ul><h3 id="j"><a class="markdownIt-Anchor" href="#j"></a> J</h3><ul><li><a href="https://github.com/taizilongxu/scrapy_jingdong" target="_blank" rel="noopener">京东</a></li><li><a href="https://github.com/Chyroc/JDong" target="_blank" rel="noopener">京东搜索+评论</a></li><li><a href="https://github.com/samrayleung/jd_spider" target="_blank" rel="noopener">京东商品+评论</a></li><li><a href="https://github.com/fankcoder/findtrip" target="_blank" rel="noopener">机票</a></li><li><a href="https://github.com/kulovecc/jandan_spider" target="_blank" rel="noopener">煎蛋妹纸</a></li><li><a href="https://github.com/lzjqsdd/NewsSpider" target="_blank" rel="noopener">今日头条，网易，腾讯等新闻</a></li></ul><h3 id="k"><a class="markdownIt-Anchor" href="#k"></a> K</h3><ul><li><a href="https://github.com/atonasting/zhihuspider" target="_blank" rel="noopener">看知乎</a></li><li><a href="https://github.com/xinqiu/kechenggezi-Spider" target="_blank" rel="noopener">课程格子校花榜</a></li><li><a href="https://github.com/wudaown/konachanDL" target="_blank" rel="noopener">konachan</a></li></ul><h3 id="l"><a class="markdownIt-Anchor" href="#l"></a> L</h3><ul><li><a href="https://github.com/lanbing510/LianJiaSpider" target="_blank" rel="noopener">链家</a></li><li><a href="https://github.com/GuozhuHe/webspider" target="_blank" rel="noopener">拉勾</a></li><li><a href="https://github.com/youfou/hsdata" target="_blank" rel="noopener">炉石传说</a></li><li><a href="https://github.com/bonfy/leetcode" target="_blank" rel="noopener">leetcode</a></li><li><a href="https://github.com/XetRAHF/Spider_LinkedInSalesNavigatorURL" target="_blank" rel="noopener">领英销售导航器爬虫 LinkedInSalesNavigator</a></li></ul><h3 id="m"><a class="markdownIt-Anchor" href="#m"></a> M</h3><ul><li><a href="https://github.com/golmic/mafengwo-spider" target="_blank" rel="noopener">马蜂窝(node.js)</a></li><li><a href="https://github.com/Thoxvi/MyCar_python" target="_blank" rel="noopener">MyCar</a></li><li><a href="https://github.com/miaoerduo/cartoon-cat" target="_blank" rel="noopener">漫画喵 一键下载漫画~</a></li><li>美女写真套图爬虫 <a href="https://github.com/chenjiandongx/mmjpg" target="_blank" rel="noopener">（一）</a><a href="https://github.com/chenjiandongx/mzitu" target="_blank" rel="noopener">（二）</a></li></ul><h3 id="n"><a class="markdownIt-Anchor" href="#n"></a> N</h3><ul><li><a href="https://github.com/NolanZhao/news_feed" target="_blank" rel="noopener">新闻监控</a></li></ul><h3 id="p"><a class="markdownIt-Anchor" href="#p"></a> P</h3><ul><li><a href="https://github.com/littleVege/pixiv_crawl" target="_blank" rel="noopener">Pixiv</a></li><li><a href="https://github.com/xiyouMc/WebHubBot" target="_blank" rel="noopener">PornHub</a></li><li><a href="https://github.com/niqdev/packtpub-crawler" target="_blank" rel="noopener">packtpub</a></li></ul><h3 id="q"><a class="markdownIt-Anchor" href="#q"></a> Q</h3><ul><li><a href="https://github.com/LiuXingMing/QQSpider" target="_blank" rel="noopener">QQ空间</a></li><li><a href="https://github.com/caspartse/QQ-Groups-Spider" target="_blank" rel="noopener">QQ 群</a></li><li><a href="https://github.com/kehao95/thu_learn" target="_blank" rel="noopener">清华大学网络学堂爬虫</a></li><li><a href="https://github.com/lining0806/QunarSpider" target="_blank" rel="noopener">去哪儿</a></li><li><a href="https://github.com/chenjiandongx/51job" target="_blank" rel="noopener">前程无忧Python招聘岗位信息爬取分析</a></li></ul><h3 id="r"><a class="markdownIt-Anchor" href="#r"></a> R</h3><ul><li><a href="https://github.com/gnehsoah/yyets-spider" target="_blank" rel="noopener">人人影视</a></li><li><a href="https://github.com/shanelau/rssSpider" target="_blank" rel="noopener">RSS 爬虫</a></li><li><a href="https://github.com/evilcos/crawlers" target="_blank" rel="noopener">rosi 妹子图</a></li><li><a href="https://github.com/tsarjak/WallpapersFromReddit" target="_blank" rel="noopener">reddit 壁纸</a></li><li><a href="https://github.com/dannyvai/reddit_crawlers" target="_blank" rel="noopener">reddit</a></li></ul><h3 id="s"><a class="markdownIt-Anchor" href="#s"></a> S</h3><ul><li><a href="https://github.com/Cortexelus/dadabots" target="_blank" rel="noopener">soundcloud</a></li><li><a href="https://github.com/chenjiandongx/stackoverflow" target="_blank" rel="noopener">Stackoverflow 100万问答爬虫</a></li><li><a href="https://github.com/chenjiandongx/soksaccounts" target="_blank" rel="noopener">Shadowsocks 账号爬虫</a></li></ul><h3 id="t"><a class="markdownIt-Anchor" href="#t"></a> T</h3><ul><li><a href="https://github.com/facert/tumblr_spider" target="_blank" rel="noopener">tumblr</a></li><li><a href="https://github.com/waditu/tushare" target="_blank" rel="noopener">TuShare</a></li><li><a href="https://github.com/LiuXingMing/Tmall1212" target="_blank" rel="noopener">天猫双12爬虫</a></li><li><a href="https://github.com/carlonelong/TaobaoMMCrawler" target="_blank" rel="noopener">Taobao mm</a></li><li><a href="https://github.com/chenjiandongx/cup-size" target="_blank" rel="noopener">Tmall 女性文胸尺码爬虫</a></li><li><a href="https://github.com/xiaozhongliu/taobao-live-crawler" target="_blank" rel="noopener">淘宝直播弹幕爬虫(node)</a></li></ul><h3 id="v"><a class="markdownIt-Anchor" href="#v"></a> V</h3><ul><li><a href="https://github.com/billvsme/videoSpider" target="_blank" rel="noopener">视频信息爬虫</a></li><li><a href="https://github.com/chenqing/spider" target="_blank" rel="noopener">电影网站</a></li></ul><h3 id="w"><a class="markdownIt-Anchor" href="#w"></a> W</h3><ul><li><a href="https://github.com/hanc00l/wooyun_public" target="_blank" rel="noopener">乌云公开漏洞</a></li><li><a href="https://github.com/bowenpay/wechat-spider" target="_blank" rel="noopener">微信公众号</a></li><li><a href="https://github.com/lijinma/wechat_spider" target="_blank" rel="noopener">“代理”方式抓取微信公众号文章</a></li><li><a href="https://github.com/armysheng/tech163newsSpider" target="_blank" rel="noopener">网易新闻</a></li><li><a href="https://github.com/dongweiming/commentbox" target="_blank" rel="noopener">网易精彩评论</a></li><li><a href="https://github.com/luzhijun/weiboSA" target="_blank" rel="noopener">微博主题搜索分析</a></li><li><a href="https://github.com/RitterHou/music-163" target="_blank" rel="noopener">网易云音乐</a></li></ul><h3 id="x"><a class="markdownIt-Anchor" href="#x"></a> X</h3><ul><li><a href="https://github.com/decaywood/XueQiuSuperSpider" target="_blank" rel="noopener">雪球股票信息(java)</a></li><li><a href="https://github.com/LiuXingMing/SinaSpider" target="_blank" rel="noopener">新浪微博</a></li><li><a href="https://github.com/ResolveWang/weibospider" target="_blank" rel="noopener">新浪微博分布式爬虫</a></li></ul><h3 id="y"><a class="markdownIt-Anchor" href="#y"></a> Y</h3><ul><li><a href="https://github.com/pockry/tv-crawler" target="_blank" rel="noopener">英美剧 TV (node.js)</a></li></ul><h3 id="z"><a class="markdownIt-Anchor" href="#z"></a> Z</h3><ul><li><a href="https://github.com/chenjiandongx/wallpaper" target="_blank" rel="noopener">ZOL 手机壁纸爬虫</a></li><li><a href="https://github.com/LiuRoy/zhihu_spider" target="_blank" rel="noopener">知乎(python)</a></li><li><a href="https://github.com/owner888/phpspider" target="_blank" rel="noopener">知乎(php)</a></li><li><a href="https://github.com/yanzhou/CnkiSpider" target="_blank" rel="noopener">知网</a></li><li><a href="https://github.com/yjm12321/zhihu-girl" target="_blank" rel="noopener">知乎妹子</a></li><li><a href="https://github.com/facert/ziroom_realtime_spider" target="_blank" rel="noopener">自如实时房源提醒</a></li></ul><h3 id="其他"><a class="markdownIt-Anchor" href="#其他"></a> 其他</h3><ul><li><a href="https://github.com/Nyloner/Nyspider" target="_blank" rel="noopener">各种爬虫</a></li><li><a href="https://github.com/blueskyz/DHTCrawler" target="_blank" rel="noopener">DHT 爬虫</a></li><li><a href="https://github.com/dontcontactme/simDHT" target="_blank" rel="noopener">SimDHT</a></li><li><a href="https://github.com/dontcontactme/p2pspider" target="_blank" rel="noopener">p2pspider</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; 
      
    
    </summary>
    
    
      <category term="▶小技能" scheme="https://chuyuxuan.xyz/categories/%E2%96%B6%E5%B0%8F%E6%8A%80%E8%83%BD/"/>
    
    
      <category term="爬虫API" scheme="https://chuyuxuan.xyz/tags/%E7%88%AC%E8%99%ABAPI/"/>
    
      <category term="python" scheme="https://chuyuxuan.xyz/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Javascript对象相关</title>
    <link href="https://chuyuxuan.xyz/2020/03/21/%E2%96%B6%E5%89%8D%E7%AB%AF/JavaScript/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/js%E7%9A%84%E5%AF%B9%E8%B1%A1%E7%9B%B8%E5%85%B3/"/>
    <id>https://chuyuxuan.xyz/2020/03/21/%E2%96%B6%E5%89%8D%E7%AB%AF/JavaScript/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/js%E7%9A%84%E5%AF%B9%E8%B1%A1%E7%9B%B8%E5%85%B3/</id>
    <published>2020-03-21T01:30:00.000Z</published>
    <updated>2020-04-15T08:33:41.437Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>JavaScript是一种基于对象<code>（Object-based）</code>的语言，在JavaScript中，对象的创建和Java不同，既有Java使用的构造函数方式，也有其他方法。</p><h1 id="对象的定义"><a class="markdownIt-Anchor" href="#对象的定义"></a> 对象的定义</h1><p>JavaScript中的**一切都是对象，**这是该语言的一个很大的特点。像字符串、数组等已经定义的对象叫做<code>内置对象</code>。用户自己也可以定义对象，叫做<code>自定义对象</code>。自定义对象指数据和函数（又叫方法）的集合。数据指变量名和变量的值构成的组合。如下图所示：<br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/javascript/1.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/javascript/1.png" class="lazyload"></a><br>下面介绍五种创建对象的方法，其中通过对象字面量和使用构造函数创建对象最常用。</p><h2 id="对象字面量"><a class="markdownIt-Anchor" href="#对象字面量"></a> 对象字面量</h2><p>这是<code>最常用</code>的创建对象的方法，通过新建一个键值对的集合（对象字面量）创建对象，如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> song = &#123;</span><br><span class="line">    name:<span class="string">"Liekkas"</span>,</span><br><span class="line">      time:<span class="number">180</span>,</span><br><span class="line">      <span class="string">"song language"</span>:English,</span><br><span class="line">      singer: &#123;</span><br><span class="line">        singerName:<span class="string">"Sofia Jannok"</span>,</span><br><span class="line">            singerAge:<span class="number">30</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></div><p>键值对中的键指的是属性的名字，若其中含有空格，名字需要用双引号包含在内。值指的是属性的值，可以是基本类型：如字符串，数字，布尔型，也可以是一个对象。键值对之间用逗号隔开，最后一个键值对后面没有逗号，所有的键值对在一个大括号中。</p><h2 id="通过关键字new创建对象"><a class="markdownIt-Anchor" href="#通过关键字new创建对象"></a> 通过关键字new创建对象</h2><p>通过<code>new</code>关键字创建对象也是一个常用的方法。如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> Store = <span class="keyword">new</span> <span class="built_in">Object</span>();<span class="comment">//创建对象的一个实例</span></span><br><span class="line">Store.name = <span class="string">"lofo Market"</span>;</span><br><span class="line">Store.location = <span class="string">"NO.13 Five Avenue"</span>;</span><br><span class="line">Store.salesVolume = <span class="number">1000000</span>;</span><br></pre></td></tr></table></figure></div><p>通过上面的代码，我们就能创建一个名为<code>Store</code>的对象。</p><h2 id="通过工厂方法创建对象"><a class="markdownIt-Anchor" href="#通过工厂方法创建对象"></a> 通过工厂方法创建对象</h2><p>工厂方法就是通过<code>函数创建对象</code>，函数封装了创建对象的过程。<br>这是一种通过函数创建对象的方法，函数封装了对象的创建过程，创建新对象时只需要调用该函数即可。这种方法<strong>适合于一次创建多个对象</strong>。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//对象的创建函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createStoreObject</span>(<span class="params">name,location,salesVolume</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> store = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line">    store.name = name;</span><br><span class="line">    store.locaion = location;</span><br><span class="line">    store.salesVolume = salesVolume;</span><br><span class="line">    store.display = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> store;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//利用该函数创建一个对象</span></span><br><span class="line"><span class="keyword">var</span> store1 = createStoreObject(<span class="string">"panda express"</span>,<span class="string">"No.1,People Street"</span>,<span class="number">200000</span>);</span><br></pre></td></tr></table></figure></div><p>这样就创建了一个名为<code>store1</code>的对象，注意这个对象除了属性之外还有一个方法<code>display</code>。要创建更多的类似store1的对象，直接<strong>调用该函数</strong>即可。</p><h2 id="使用构造函数创建对象"><a class="markdownIt-Anchor" href="#使用构造函数创建对象"></a> 使用构造函数创建对象</h2><p>上面虽然也是通过函数创建对象，但不是构造函数，只是普通函数。<strong>构造函数名必须以<code>大写字母</code>开头，函数体内没有返回语句</strong>。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Store</span>(<span class="params">name,location,salesVolume</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.locaion = location;</span><br><span class="line">    <span class="keyword">this</span>.salesVolume = salesVolume;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建对象的实例</span></span><br><span class="line"><span class="keyword">var</span> myStore = <span class="keyword">new</span> Store(<span class="string">"KeyExp"</span>,<span class="string">"No.1,L.Street"</span>,<span class="number">540000</span>);</span><br></pre></td></tr></table></figure></div><p>上面的代码首先是<code>Store</code>对象的<code>构造函数</code>，然后用该构造函数<strong>创建了Store对象的一个实例myStore</strong>。</p><p><span id="jump"> </span></p><h2 id="使用原型prototype创建对象"><a class="markdownIt-Anchor" href="#使用原型prototype创建对象"></a> 使用原型(prototype)创建对象</h2><p>当我们创建一个函数时，函数就会自动拥有一个<a href="https://baike.baidu.com/item/prototype/14335187?fr=aladdin" target="_blank" rel="noopener">prototype</a>属性，这个属性的值是一个对象，这个对象被称为该函数的原型对象。也可以叫做原型。</p><p>当用new关键字加函数的模式创建一个对象时，这个对象就会有一个默认的不可见的属性<code>Prototype</code>，该属性的值就是上面提到的原型对象。如下图所示：</p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/javascript/2.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/javascript/2.png" class="lazyload"></a></p><p>JavaScript中每个对象都有一个属性<code>Prototype</code>，指向它的原型对象，该原型对象又具有一个自己的<code>Prototype</code>，层层向上直到一个对象的原型为<code>null</code>。根据定义，null 没有原型，并作为这个原型链中的<strong>最后一个环节</strong>。如下图所示：</p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/javascript/3.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/javascript/3.png" class="lazyload"></a></p><div class="note danger">            <p>这种方法是对使用构造函数创建对象的改进，使用构造函数创建一个对象时，会把构造函数中的方法（上面的构造函数只有属性的键值对，没有方法）都创建一遍，浪费内存，使用原型不存在这个问题。</p>          </div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Store</span>(<span class="params"></span>) </span>&#123;&#125;;</span><br><span class="line">Store.prototype.name = <span class="string">"SF Express"</span>;</span><br><span class="line">Store.prototype.locaion = <span class="string">"Hong Kong"</span>;</span><br><span class="line">Store.prototype.salesVolume = <span class="number">1200000000</span>;</span><br><span class="line"><span class="comment">//创建对象</span></span><br><span class="line"><span class="keyword">var</span> myStore = <span class="keyword">new</span> Store();</span><br><span class="line"><span class="comment">//创建一个新的对象</span></span><br><span class="line"><span class="keyword">var</span> hisStore = <span class="keyword">new</span> Store();</span><br><span class="line">hisStore.name = <span class="string">"STO Express"</span>;<span class="comment">//覆盖了原来的name属性</span></span><br></pre></td></tr></table></figure></div><p>这种方法的好处是，创建一个新的对象时，可以<strong>更改部分属性的值</strong>。</p><h1 id="js-类的增删改查"><a class="markdownIt-Anchor" href="#js-类的增删改查"></a> JS <code>类</code>的增删改查</h1><p>在Java中，当实体类建立以后，类的属性只能获取与修改，不能增加与删除。但是因为<strong>JavaScript是动态类型的语言</strong>，JavaScript中对象的属性具有增删改查所有的操作。</p><h2 id="属性的获取"><a class="markdownIt-Anchor" href="#属性的获取"></a> 属性的获取</h2><h3 id="方式一"><a class="markdownIt-Anchor" href="#方式一"></a> 方式一</h3><p>属性的获取有两种方式，一种是使用.符号，符号左侧是对象的名字，符号右侧是属性的名字，如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> student = &#123;<span class="attr">name</span>:<span class="string">"Alice"</span>,<span class="attr">gender</span>:<span class="string">"girl"</span>&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(student.name);<span class="comment">//输出Alice</span></span><br></pre></td></tr></table></figure></div><p>这种情况下<strong>属性名必须是静态的字符串</strong>，即不能是通过计算或者字符串的拼接形成的字符串。</p><h3 id="方式二"><a class="markdownIt-Anchor" href="#方式二"></a> 方式二</h3><p>另外一种是使用<code>&quot;&quot;</code>双引符号，符号的左边是对象的名字，双引号中间是属性的名字，这种情况下属性名可以是一个表达式，只要表达式的值是一个字符串即可。如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> student = &#123;<span class="attr">name</span>:<span class="string">"Alice"</span>,<span class="attr">gender</span>:<span class="string">"girl"</span>&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(student[<span class="string">"name"</span>]);<span class="comment">//输出Alice</span></span><br></pre></td></tr></table></figure></div><p>有两种情况必须使用第二种方式：</p><ul><li><p>属性名含有空格字符，如student[“first name”]，这时不能用student.first name代替，编译器无法解释后者；</p></li><li><p>属性名动态生成，比如用for循环获取前端连续id的值，这种id名之间一般有特定关系。如下面的例子：</p></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(int i = <span class="number">0</span>;i &lt; <span class="number">5</span>;i ++) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(student[<span class="string">"id"</span>+i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="属性的修改与新增"><a class="markdownIt-Anchor" href="#属性的修改与新增"></a> 属性的修改与新增</h2><p>属性的修改指修改已有属性的值，这个直接用赋值符号即可。</p><p><em>属性的新增与修改在形式上完全相同，区别仅在于编译器会根据属性的名字判断是否有该属性，有则修改，没有则新增。</em></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> student = &#123;</span><br><span class="line">    name:<span class="string">"Kim"</span>,</span><br><span class="line">    age:<span class="number">21</span></span><br><span class="line">&#125;;</span><br><span class="line">student.age = <span class="number">20</span>;<span class="comment">//修改属性，覆盖了原来的值21</span></span><br><span class="line">student.gender = <span class="string">"female"</span>;<span class="comment">//新增属性gender</span></span><br></pre></td></tr></table></figure></div><h2 id="删除属性"><a class="markdownIt-Anchor" href="#删除属性"></a> 删除属性</h2><p>JavaScript中的属性还可以删除，这在其他的面向对象语言如Java或者C++中是无法想象的，删除通过<code>delete</code>运算符实现。</p><div class="note danger">            <p><strong>删除成功返回布尔型true，删除失败也是返回true，所以在删除之前需要判断一个属性是否存在.</strong></p><h4><font face="华文行楷" color="#993366">看下面的属性</font></h4>          </div><p>需要注意的是，<em>对象只能删除自己特有的属性，而不能删除继承自原型对象的属性</em>。同时，对象在删除属性时，要防止删除被其他对象继承的属性，因为这样会导致程序出错。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> Store = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line">Store.name = <span class="string">"lofo Market"</span>;</span><br><span class="line">Store.location = <span class="string">"NO.13 Five Avenue"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">delete</span> Store.name);<span class="comment">//删除成功，输出true</span></span><br><span class="line"><span class="built_in">console</span>.log(Store.name);<span class="comment">//已删除，返回undefined</span></span><br><span class="line"><span class="keyword">delete</span> Store.prototype;<span class="comment">//删除失败，非自有属性</span></span><br></pre></td></tr></table></figure></div><h3 id="判断属性是否存在"><a class="markdownIt-Anchor" href="#判断属性是否存在"></a> 判断属性是否存在</h3><p>属性的检测指检查对象是否有某个属性或者方法，需要使用运算符<code>in</code>.</p><div class="note danger">            <ul><li><code>in</code>的左侧是属性或者方法名，右侧是检查对象，对象有该属性或者方法则返回true，否则返回false.</li></ul>          </div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> school = &#123;</span><br><span class="line">    name:<span class="string">"SJTU"</span>,</span><br><span class="line">    location:<span class="string">"ShangHai"</span>,</span><br><span class="line">    studentNum:<span class="number">40000</span>,</span><br><span class="line">    display:<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//检测属性</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"name"</span> <span class="keyword">in</span> school);<span class="comment">//输出true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"sales"</span> <span class="keyword">in</span> school);<span class="comment">//输出false</span></span><br><span class="line"><span class="comment">//检测方法</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"display"</span> <span class="keyword">in</span> school);<span class="comment">//输出true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"print"</span> <span class="keyword">in</span> school);<span class="comment">//输出false</span></span><br></pre></td></tr></table></figure></div><p><strong>这里的属性名是字符串，必须用双引号包含在内。</strong></p><p>还可以用<code>hasOwnProperty()</code>检测对象是否具有某个自有属性或方法。括号内的参数是属性或者方法的名字。</p><p>所谓自有属性或者方法，是指对象自己定义的属性或者方法，而不是从<a href="#jump">原型链</a>上继承来的。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> school = &#123;</span><br><span class="line">    name:<span class="string">"SJTU"</span>,</span><br><span class="line">    location:<span class="string">"ShangHai"</span>,</span><br><span class="line">    studentNum:<span class="number">40000</span>,</span><br><span class="line">    display:<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(school.hasOwnProperty(<span class="string">"studentNum"</span>));<span class="comment">//true</span></span><br><span class="line"><span class="built_in">console</span>.log(school.hasOwnProperty(<span class="string">"hasOwnProperty"</span>));<span class="comment">//false</span></span><br></pre></td></tr></table></figure></div><p>因为<code>hasOwnProperty方法</code>继承自<code>object</code>对象，不是自有方法，所以返回<code>false</code>。</p><h2 id="属性的枚举"><a class="markdownIt-Anchor" href="#属性的枚举"></a> 属性的枚举</h2><p>定义：属性的枚举指按顺序逐个的列出属性的名字。如下面的例子：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> person = &#123;</span><br><span class="line">    name:<span class="string">"Ye"</span>,</span><br><span class="line">    gender:<span class="string">"Gril"</span>,</span><br><span class="line">    age:<span class="number">23</span>,</span><br><span class="line">    salary:<span class="number">23000</span>,</span><br><span class="line">    height:<span class="number">1.78</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>对象<code>person</code>有五个属性，所谓枚举，就是依次列出这五个属性的名字，即<code>：name、gender、age、salary、height</code>，至于它们排列的顺序，在不同的浏览器中的结果不同，这里不讨论。</p><p>在继续下面的知识点之前，首先要知道一个概念：<code>可枚举性（enumerable）</code>，这是对象的属性的一个性质，用户自己定义的属性默认为可枚举，系统内置的对象的属性默认为不可枚举。<br>枚举属性有三种方法：</p><ul><li>for…in…循环</li><li>Object.getOwnPropertyNames()</li><li>Object.keys()</li></ul><h3 id="forin循环"><a class="markdownIt-Anchor" href="#forin循环"></a> <code>for...in...</code>循环</h3><p>可以枚举所有可枚举的属性，包括继承的属性。如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//首先定义一个school对象，它从原型链上继承的属性都是不可枚举的，而下面自定义的四个属性或者方法都是可枚举的</span></span><br><span class="line"><span class="keyword">var</span> school = &#123;</span><br><span class="line">  name:<span class="string">"SJTU"</span>,</span><br><span class="line">  location:<span class="string">"ShangHai"</span>,</span><br><span class="line">  studentNum:<span class="number">40000</span>,</span><br><span class="line">  display:<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//枚举school的属性</span></span><br><span class="line"><span class="comment">//下面的圆括号中的att表示对象的属性，school表示对象</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> att <span class="keyword">in</span> school) &#123;</span><br><span class="line">  <span class="comment">//依次输出name,location,studentNum,display</span></span><br><span class="line">  <span class="built_in">console</span>.log(att);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>圆括号里面的表达式中，<code>att</code>表示对象的属性，<code>school</code>表示该对象，这个循环将<code>依次遍历</code>对象的所有可枚举属性，<font color="red">每次输出一个属性的值。</font> <font size="1" color="#4fe000">我刚被这个坑惨了，怪我自己没仔细阅读。 </font></p><h3 id="objectgetownpropertynames"><a class="markdownIt-Anchor" href="#objectgetownpropertynames"></a> Object.getOwnPropertyNames()</h3><p>括号中有一个参数，是要枚举的对象。该表达式将返回对象的所有自有属性的名字，<strong>不区分是否可枚举</strong>，结果以<code>字符串数组</code>的形式呈现，如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义一个school对象</span></span><br><span class="line"><span class="keyword">var</span> school = &#123;</span><br><span class="line">  name:<span class="string">"SJTU"</span>,</span><br><span class="line">  location:<span class="string">"ShangHai"</span>,  </span><br><span class="line">     studentNum:<span class="number">40000</span>,</span><br><span class="line">  display:<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//为school对象增加一个不可枚举的属性range</span></span><br><span class="line"><span class="built_in">Object</span>.defineProperty(school, <span class="string">"range"</span>, &#123;</span><br><span class="line">  value: <span class="number">4</span>,<span class="comment">//设置range属性的值</span></span><br><span class="line">  enumerable: <span class="literal">false</span><span class="comment">//设置range属性为不可枚举</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//输出["name","location","studentNum","display","range"]</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.getOwnPropertyNames(school));</span><br></pre></td></tr></table></figure></div><p>如果用上面的<code>for...in...</code>循环，<code>range属性</code>是不能够枚举到的。</p><h3 id="objectkeys"><a class="markdownIt-Anchor" href="#objectkeys"></a> Object.keys()</h3><p>括号中有一个参数，是要枚举的对象。该表达式<code>返回可枚举的自有属性</code>，以<code>字符串数组</code>的形式。<strong>所以这里对属性的要求更加严格，既要求是自有属性，又要求可枚举。</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> school = &#123;</span><br><span class="line">  name:<span class="string">"SJTU"</span>,</span><br><span class="line">  location:<span class="string">"ShangHai"</span>,</span><br><span class="line">  studentNum:<span class="number">40000</span>,</span><br><span class="line">  display:<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//为school对象增加一个不可枚举的属性range</span></span><br><span class="line"><span class="built_in">Object</span>.defineProperty(school, <span class="string">"range"</span>, &#123;</span><br><span class="line">  value: <span class="number">4</span>,<span class="comment">//设置range属性的值</span></span><br><span class="line">  enumerable: <span class="literal">false</span><span class="comment">//设置range属性为不可枚举</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//输出["name","location","studentNum","display"]</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.keys(school));</span><br></pre></td></tr></table></figure></div><p>总结一下上面三个方法对属性是否自有，是否可枚举的要求：</p><table><thead><tr><th style="text-align:center">方法名</th><th style="text-align:center">是否要求可枚举</th><th style="text-align:center">是否要求自有</th></tr></thead><tbody><tr><td style="text-align:center">for…in…</td><td style="text-align:center">是</td><td style="text-align:center">否</td></tr><tr><td style="text-align:center">Object.getOwnPropertyNames()</td><td style="text-align:center">否</td><td style="text-align:center">是</td></tr><tr><td style="text-align:center">Object.keys()</td><td style="text-align:center">是</td><td style="text-align:center">是</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; 
      
    
    </summary>
    
    
      <category term="▶前端" scheme="https://chuyuxuan.xyz/categories/%E2%96%B6%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="Javascript" scheme="https://chuyuxuan.xyz/tags/Javascript/"/>
    
      <category term="JS对象" scheme="https://chuyuxuan.xyz/tags/JS%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>天外有飞仙</title>
    <link href="https://chuyuxuan.xyz/2020/03/14/%E2%96%B6%E7%94%9F%E6%B4%BB%E6%97%A5%E5%B8%B8/%E5%A4%A9%E5%A4%96%E9%A3%9E/"/>
    <id>https://chuyuxuan.xyz/2020/03/14/%E2%96%B6%E7%94%9F%E6%B4%BB%E6%97%A5%E5%B8%B8/%E5%A4%A9%E5%A4%96%E9%A3%9E/</id>
    <published>2020-03-14T11:59:22.000Z</published>
    <updated>2020-05-08T12:45:04.655Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>    <div id="aplayer-nNxlfIDX" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="108254" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="300px" data-preload="auto" data-theme="#0000"></div><!-- 选项默认值描述id必须值歌曲 id / 播放列表 id / 相册 id / 搜索关键字server必须值音乐平台: netease, tencent, kugou, xiami, baidutype必须值song, playlist, album, search, artistfixedfalse开启固定模式minifalse开启迷你模式loopall列表循环模式：all, one,noneorderlist列表播放模式： list, randomvolume0.7播放器音量lrctype0歌词格式类型listfoldedfalse指定音乐播放列表是否折叠storagenamemetingjsLocalStorage 中存储播放器设定的键名autoplaytrue自动播放，移动端浏览器暂时不支持此功能mutextrue该选项开启时，如果同页面有其他 aplayer 播放，该播放器会暂停listmaxheight340px播放列表的最大长度preloadauto音乐文件预载入模式，可选项： none, metadata, autotheme#ad7a86播放器风格色彩设置 --><h1 id="天外有飞仙"><a class="markdownIt-Anchor" href="#天外有飞仙"></a> 天外有飞仙</h1><p>夜来，习惯性的打开了网易云音乐，熟练的点开了今日推荐的歌单。默默地掏出耳机，小心翼翼的将耳塞塞在耳朵里，生怕带来不和谐的杂音让耳朵感觉到这个世界的&quot;嘈杂&quot;。</p><p>双手飞舞着敲打着作业代码，没错，音乐配代码，电脑旁边放着水杯，一切都是这么静逸，一切就像往常一样。</p><p>突然间耳朵里一首前奏，猛的唤起了我脑海里深处的记忆。这熟悉又陌生的感觉，是老林的<a href="https://music.163.com/#/song?id=108254" target="_blank" rel="noopener">一眼万年</a>。</p><p>思绪飘到了小时候。放学回家，写完作业，屁颠屁颠的找着老妈给遥控器，然后坐在电视机前，守着电视里放的天外飞仙。</p><p><a href="http://newimg.mingxing.com/upload/attach/2015/11-02/294186-MHeuCO.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="http://newimg.mingxing.com/upload/attach/2015/11-02/294186-MHeuCO.jpg" class="lazyload"></a></p><p>即使我那个时候看不懂。</p><p>小学生的我为董永不能和小七在一起而骂玉皇大帝是坏人，同时也迁怒二郎神这个小跟班，枉我还学他在额头上画一只眼睛。</p><p><a href="http://newimg.mingxing.com/upload/attach/2015/11-02/294186-03idAK.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="http://newimg.mingxing.com/upload/attach/2015/11-02/294186-03idAK.jpg" class="lazyload"></a></p><p>果然，小孩子眼里只有错与对，好与坏，单纯无邪。</p><p>有时候，看似那完美无缺的爱情，不得不败在这骨感的现实面前。</p><p><a href="http://newimg.mingxing.com/upload/attach/2015/11-02/294186-CQbggo.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="http://newimg.mingxing.com/upload/attach/2015/11-02/294186-CQbggo.jpg" class="lazyload"></a></p><p>你是仙人，而我只是一个凡人。仙人终究不能和凡人在一起的，仙人长生不老，而凡人，终究抵不过岁月消磨而老去。或许，老去的凡人是幸福的，因为它的爱人陪伴了它终生，亦或是痛苦的，因为在心爱之人前离去，剩下的，只有心爱之人的回忆。</p><p>古人终究是美好的，借用“转世”一说，续写了这凄美的爱情，歌颂着爱情。《狐妖小红娘》里的相思树，故若此吧。<br><a href="https://img.zcool.cn/community/01d3e559ffcb03a801216a4b7f62b4.jpg@1280w_1l_2o_100sh.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://img.zcool.cn/community/01d3e559ffcb03a801216a4b7f62b4.jpg@1280w_1l_2o_100sh.jpg" class="lazyload"></a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; 
      
    
    </summary>
    
    
      <category term="▶生活日常" scheme="https://chuyuxuan.xyz/categories/%E2%96%B6%E7%94%9F%E6%B4%BB%E6%97%A5%E5%B8%B8/"/>
    
    
      <category term="随笔" scheme="https://chuyuxuan.xyz/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>CSS背景定位与背景关联</title>
    <link href="https://chuyuxuan.xyz/2020/03/11/%E2%96%B6%E5%89%8D%E7%AB%AF/CSS/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/CCS%E8%83%8C%E6%99%AF%E5%AE%9A%E4%BD%8D%E4%B8%8E%E5%85%B3%E8%81%94/"/>
    <id>https://chuyuxuan.xyz/2020/03/11/%E2%96%B6%E5%89%8D%E7%AB%AF/CSS/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/CCS%E8%83%8C%E6%99%AF%E5%AE%9A%E4%BD%8D%E4%B8%8E%E5%85%B3%E8%81%94/</id>
    <published>2020-03-11T04:49:35.000Z</published>
    <updated>2020-04-13T13:05:03.010Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="背景定位"><a class="markdownIt-Anchor" href="#背景定位"></a> 背景定位</h1><p>当图像作为背景和文本显示在同一个位置时，为了页面排版更优美、更易于文本的阅读，可以使用<code>background-position</code>属性改变图像在背景中的位置:</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="comment">/*设置背景图片*/</span></span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">"https://gitee.com/chuyuxuan/tuc/raw/master/CSS/sun2.jpg"</span>);</span><br><span class="line">    <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">    <span class="attribute">background-position</span>: right top;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>显示效果如图：</p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/CSS/sun2.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/CSS/sun2.jpg" class="lazyload"></a></p><p>本例中，设置<code>right top</code>代表放置在元素内边距区的右上角。</p><p>对于具体位置，大家可以使用如下关键字的组合：</p><table><thead><tr><th style="text-align:center">属性值</th></tr></thead><tbody><tr><td style="text-align:center">top left</td></tr><tr><td style="text-align:center">top center</td></tr><tr><td style="text-align:center">top right</td></tr><tr><td style="text-align:center">center left</td></tr><tr><td style="text-align:center">center center</td></tr><tr><td style="text-align:center">center right</td></tr><tr><td style="text-align:center">bottom left</td></tr><tr><td style="text-align:center">bottom center</td></tr><tr><td style="text-align:center">bottom right</td></tr></tbody></table><p>如果值定义了一个关键词，那么第二个值将是<code>center</code>。当然也可以使用百分比和长度值.</p><h1 id="背景关联"><a class="markdownIt-Anchor" href="#背景关联"></a> 背景关联</h1><p>当页面较长时，滚动页面，背景图像也会随之滚动。当文档滚动到超过图像的位置时，图像就会消失。如果想要背景图像不随页面滚动而改变位置。可以使用<code>background-attachment</code>属性，将其值设置为<code>fixed</code>。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">"https://www.educoder.net/attachments/download/211104"</span>);</span><br><span class="line">    <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">    <span class="attribute">background-attachment</span>: fixed;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h1 id="简写背景"><a class="markdownIt-Anchor" href="#简写背景"></a> 简写背景</h1><p>为了简化这些属性的书写，我们可以将这些属性合并在同一个属性中。</p><p>例如：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>:<span class="number">#ffffff</span> <span class="built_in">url</span>(<span class="string">"./Assert/sun.jpg"</span>) no-repeat right top;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>使用简写属性时，属性值的顺序为：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">background-color</span>；</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">background-image</span>；</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">background-repeat</span>；</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">background-attachment</span>；</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">background-position</span>。</span><br></pre></td></tr></table></figure></div><p>以上属性无需全部使用，可以按照页面设置使用。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; 
      
    
    </summary>
    
    
      <category term="▶前端" scheme="https://chuyuxuan.xyz/categories/%E2%96%B6%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端" scheme="https://chuyuxuan.xyz/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="CSS" scheme="https://chuyuxuan.xyz/tags/CSS/"/>
    
      <category term="background" scheme="https://chuyuxuan.xyz/tags/background/"/>
    
  </entry>
  
  <entry>
    <title>Http协议那些事儿</title>
    <link href="https://chuyuxuan.xyz/2020/03/09/%E2%96%B6%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E5%BA%94%E7%94%A8%E5%B1%82/http%E5%8D%8F%E8%AE%AE%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/"/>
    <id>https://chuyuxuan.xyz/2020/03/09/%E2%96%B6%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E5%BA%94%E7%94%A8%E5%B1%82/http%E5%8D%8F%E8%AE%AE%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/</id>
    <published>2020-03-09T11:42:53.000Z</published>
    <updated>2020-04-13T13:05:03.011Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><font size="1">来源于<a href="https://mp.weixin.qq.com/s/FJGKObVnU61ve_ioejLrtw" target="_blank" rel="noopener">codesheep</a>,稍微对其美化和排版。<br></font></p><div class="note danger">            <h1 id="01-http-基本概念"><a class="markdownIt-Anchor" href="#01-http-基本概念"></a> 01 HTTP 基本概念</h1>          </div><p>HTTP 是超文本传输协议，是超文本传输协议，也就是 <strong>H</strong> yperText  <strong>T</strong> ransfer  <strong>P</strong> rotocol。HTTP的名字「<code>超文本协议传输</code>」，它可以拆成三个部分：</p><pre><code>    超文本    传输    协议</code></pre><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http1.png" data-fancybox="group" data-caption="三个部分" class="fancybox"><img alt="三个部分" title="三个部分" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http1.png" class="lazyload"></a></p><p>说白了，<strong>HTTP 是一个在计算机世界里专门在<code>「两点」</code>之间<code>「传输」</code>文字、图片、音频、视频等<code>「超文本」</code>数据的<code>「约定和规范」</code>。</strong></p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http12.png" data-fancybox="group" data-caption="请求 - 应答" class="fancybox"><img alt="请求 - 应答" title="请求 - 应答" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http12.png" class="lazyload"></a></p> <div class="note success">            <h1 id="02-http-常见的状态码"><a class="markdownIt-Anchor" href="#02-http-常见的状态码"></a> 02 HTTP 常见的状态码</h1>          </div><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http19.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http19.png" class="lazyload"></a></p><h2 id="1xx"><a class="markdownIt-Anchor" href="#1xx"></a> 1xx</h2><p><code>1xx</code> 类状态码属于提示信息，是协议处理中的一种中间状态，实际用到的比较少。</p><h2 id="2xx"><a class="markdownIt-Anchor" href="#2xx"></a> 2xx</h2><p><code>2xx</code> 类状态码表示服务器成功处理了客户端的请求，也是我们最愿意看到的状态。</p><ul><li><p>「<em>200 OK</em>」是最常见的成功状态码，表示一切正常。如果是非 HEAD 请求，服务器返回的响应头都会有 body 数据。</p></li><li><p>「<em>204 No Content</em>」也是常见的成功状态码，与 200 OK 基本相同，但响应头没有 body 数据。</p></li><li><p>「<em>206 Partial Content</em>」是应用于 HTTP 分块下载或断电续传，表示响应返回的 body 数据并不是资源的全部，而是其中的一部分，也是服务器处理成功的状态。</p></li></ul><h2 id="3xx"><a class="markdownIt-Anchor" href="#3xx"></a> 3xx</h2><p><code>3xx</code> 类状态码表示客户端请求的资源发送了变动，需要客户端用新的 URL 重新发送请求获取资源，也就是重定向。</p><ul><li><p>「<em>301 Moved Permanently</em>」表示永久重定向，说明请求的资源已经不存在了，需改用新的 URL 再次访问。</p></li><li><p>「<em>302 Found</em>」表示临时重定向，说明请求的资源还在，但暂时需要用另一个 URL 来访问。301 和 302 都会在响应头里使用字段 Location，指明后续要跳转的 URL，浏览器会自动重定向新的 URL。</p></li><li><p>「<em>304 Not Modified</em>」不具有跳转的含义，表示资源未修改，重定向已存在的缓冲文件，也称缓存重定向，用于缓存控制。</p></li></ul><h2 id="4xx"><a class="markdownIt-Anchor" href="#4xx"></a> 4xx</h2><p><code>4xx</code>类状态码表示客户端发送的报文有误，服务器无法处理，也就是错误码的含义。</p><ul><li><p>「<em>400 Bad Request</em>」表示客户端请求的报文有错误，但只是个笼统的错误。</p></li><li><p>「<em>403 Forbidden</em>」表示服务器禁止访问资源，并不是客户端的请求出错。</p></li><li><p>「<em>404 Not Found</em>」表示请求的资源在服务器上不存在或未找到，所以无法提供给客户端。</p></li></ul><h2 id="5xx"><a class="markdownIt-Anchor" href="#5xx"></a> 5xx</h2><p><code>5xx</code> 类状态码表示客户端请求报文正确，但是服务器处理时内部发生了错误，属于服务器端的错误码。</p><ul><li><p>「<em>500 Internal Server Error</em>」与 400 类型，是个笼统通用的错误码，服务器发生了什么错误，我们并不知道。</p></li><li><p>「<em>501 Not Implemented</em>」表示客户端请求的功能还不支持，类似“即将开业，敬请期待”的意思。</p></li><li><p>「<em>502 Bad Gateway</em>」通常是服务器作为网关或代理时返回的错误码，表示服务器自身工作正常，访问后端服务器发生了错误。</p></li><li><p>「<em>503 Service Unavailable</em>」表示服务器当前很忙，暂时无法响应服务器，类似“网络服务正忙，请稍后重试”的意思。</p></li></ul><div class="note success">            <h1 id="03-http-常见字段"><a class="markdownIt-Anchor" href="#03-http-常见字段"></a> 03 HTTP 常见字段</h1>          </div><h2 id="1-host字段"><a class="markdownIt-Anchor" href="#1-host字段"></a> 1. <em>Host字段</em></h2><p>客户端发送请求时，用来指定服务器的域名。</p><pre><code>    Host: www.A.com</code></pre><p>有了 Host 字段，就可以将请求发往「同一台」服务器上的不同网站。<br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http20.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http20.png" class="lazyload"></a></p><h2 id="2content-length-字段"><a class="markdownIt-Anchor" href="#2content-length-字段"></a> 2.<em>Content-Length 字段</em></h2><p>服务器在返回数据时，会有<code>Content-Length</code> 字段，表明本次回应的数据长度。</p><pre><code>    Content-Length: 1000</code></pre><p>如上面则是告诉浏览器，本次服务器回应的数据长度是 1000 个字节，后面的字节就属于下一个回应了。<br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http21.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http21.png" class="lazyload"></a></p><h2 id="3connection-字段"><a class="markdownIt-Anchor" href="#3connection-字段"></a> 3.<em>Connection 字段</em></h2><p><code>Connection</code>字段最常用于客户端要求服务器使用 TCP 持久连接，以便其他请求复用。HTTP/1.1 版本的默认连接都是持久连接，但为了兼容老版本的 HTTP，需要指定 Connection 首部字段的值为 <code>Keep-Alive</code>。</p><pre><code>    Connection: keep-alive</code></pre><p>一个可以复用的 TCP 连接就建立了，直到客户端或服务器主动关闭连接。但是，这b并不是标准字段。</p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http22.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http22.png" class="lazyload"></a></p><h2 id="4content-type-字段"><a class="markdownIt-Anchor" href="#4content-type-字段"></a> 4.<em>Content-Type 字段</em></h2><p><code>Content-Type</code>字段用于服务器回应时，告诉客户端，本次数据是什么格式。</p><pre><code>    Content-Type: text/html; charset=utf-8</code></pre><p>上面的类型表明，发送的是网页，而且编码是UTF-8。客户端请求的时候，可以使用 Accept 字段声明自己可以接受哪些数据格式。</p><pre><code>    Accept: */*</code></pre><p>上面代码中，客户端声明自己可以接受任何格式的数据。<br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http23.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http23.png" class="lazyload"></a></p><h2 id="5content-encoding-字段"><a class="markdownIt-Anchor" href="#5content-encoding-字段"></a> 5.<em>Content-Encoding 字段</em></h2><p><code>Content-Encoding</code>字段说明数据的压缩方法。表示服务器返回的数据使用了什么压缩格式</p><pre><code>    Content-Encoding: gzip</code></pre><p>上面表示服务器返回的数据采用了 gzip 方式压缩，告知客户端需要用此方式解压。<br>客户端在请求时，用 Accept-Encoding 字段说明自己可以接受哪些压缩方法。</p><pre><code>    Accept-Encoding: gzip, deflate</code></pre><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http24.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http24.png" class="lazyload"></a></p><div class="note success">            <h1 id="05-get-与-post"><a class="markdownIt-Anchor" href="#05-get-与-post"></a> 05 GET 与 POST</h1>          </div><h2 id="get-和-post-的区别"><a class="markdownIt-Anchor" href="#get-和-post-的区别"></a> GET 和 POST 的区别</h2><p><code>Get</code> 方法的含义是请求 <strong>从服务器获取资源</strong> ，这个资源可以是静态的文本、页面、图片视频等。比如，你打开我的文章，浏览器就会发送 GET 请求给服务器，服务器就会返回文章的所有文字及资源。<br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http25.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http25.png" class="lazyload"></a></p><p>而 <code>POST</code>方法则是相反操作，它向<code>URI</code> 指定的资源提交数据，数据就放在<code>报文</code>的 <code>body</code>里。</p><p>比如，你在我文章底部，敲入了留言后点击「提交」（ <strong>暗示你们留言</strong> ），浏览器就会执行一次 POST 请求，把你的留言文字放进了报文 body 里，然后拼接好 POST 请求头，通过 TCP 协议发送给服务器。<br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http2.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http2.png" class="lazyload"></a></p><h2 id="get-和-post-的安全和幂等"><a class="markdownIt-Anchor" href="#get-和-post-的安全和幂等"></a> GET 和 POST 的安全和幂等</h2><p><font size="1">--------chuyuxuan: 讲真，我头一次听说<code>安全和幂等</code><br></font></p><h3 id="安全和幂等"><a class="markdownIt-Anchor" href="#安全和幂等"></a> 安全和幂等：</h3><ul><li>在<code>HTTP</code>协议里，所谓的「<code>安全</code>」是指请求方法不会「<code>破坏</code>」服务器上的资源。</li><li>所谓的「<code>幂等</code>」，意思是多次执行相同的操作，结果都是「<code>相同</code>」的。</li></ul><p>那么很明显 :</p><ul><li><p><strong>GET 方法就是安全且幂等的</strong> ，因为它是「只读」操作，无论操作多少次，服务器上的数据都是安全的，且每次的结果都是相同的。</p></li><li><p><strong>POST</strong>  因为是「<code>新增或提交数据</code>」的操作，会修改服务器上的资源，所以是 <strong>不安全</strong> 的，且多次提交数据就会创建多个资源，所以 <strong>不是幂等</strong> 的。</p></li></ul><div class="note success">            <h1 id="06-http-特性"><a class="markdownIt-Anchor" href="#06-http-特性"></a> 06 HTTP 特性</h1>          </div><h2 id="优点"><a class="markdownIt-Anchor" href="#优点"></a> 优点</h2><p>HTTP 最凸出的优点是「简单、灵活和易于扩展、应用广泛和跨平台」。</p><p><font size="1">-------chuyuxuan: 怪不得有人说以后<code>BS(browser clinet)架构</code>要广泛于<code>CS 架构</code>.<br></font></p><h3 id="1-简单"><a class="markdownIt-Anchor" href="#1-简单"></a> <em>1. 简单</em></h3><p>HTTP 基本的报文格式就是<code>header + body</code>，头部信息也是 key-value 简单文本的形式， <strong>易于理解</strong> ，降低了学习和使用的门槛。</p><h3 id="2-灵活和易于扩展"><a class="markdownIt-Anchor" href="#2-灵活和易于扩展"></a> <em>2. 灵活和易于扩展</em></h3><p>HTTP协议里的各类请求方法、URI/URL、状态码、头字段等每个组成要求都没有被固定死，都允许开发人员 <strong>自定义和扩充</strong> 。</p><p>同时 HTTP 由于是工作在应用层（ OSI 第七层），则它 <strong>下层可以随意变化</strong> 。</p><p>HTTPS 也就是在 HTTP 与 TCP 层之间增加了 SSL/TLS 安全传输层，HTTP/3 甚至把 TCPP 层换成了基于 UDP 的 QUIC。</p><h3 id="3-应用广泛和跨平台"><a class="markdownIt-Anchor" href="#3-应用广泛和跨平台"></a> <em>3. 应用广泛和跨平台</em></h3><p>互联网发展至今，HTTP 的应用范围非常的广泛，从台式机的浏览器到手机上的各种 APP，从看新闻、刷贴吧到购物、理财、吃鸡，HTTP 的应用 <strong>片地开花</strong> ，同时天然具有 <strong>跨平台</strong> 的优越性。</p><h2 id="缺点"><a class="markdownIt-Anchor" href="#缺点"></a> 缺点</h2><p>HTTP 协议里有优缺点一体的 <strong>双刃剑</strong> ，分别是「<code>无状态、明文传输</code>」，同时还有一大缺点「<code>不安全</code>」。</p><h3 id="1-无状态双刃剑"><a class="markdownIt-Anchor" href="#1-无状态双刃剑"></a> <em>1. 无状态双刃剑</em></h3><p>无状态的 <strong>好处</strong> ，因为服务器不会去记忆 HTTP 的状态，所以不需要额外的资源来记录状态信息，这能减轻服务器的负担，能够把更多的 CPU 和内存用来对外提供服务。</p><p>无状态的 <strong>坏处</strong> ，既然服务器没有记忆能力，它在完成有关联性的操作时会非常麻烦。</p><p>例如:<code>登录;添加购物车;下单;结算;支付</code>，这系列操作都要知道用户的身份才行。但服务器不知道这些请求是有关联的，每次都要问一遍身份信息。<br>这样每操作一次，都要验证信息，这样的购物体验还能愉快吗？</p><p>对于无状态的问题，解法方案有很多种，其中比较简单的方式用  <strong>Cookie</strong>  技术。</p><p><code>Cookie</code> 通过在请求和响应报文中写入 <code>Cookie</code> 信息来控制客户端的状态。</p><p>相当于， <strong>在客户端第一次请求后，服务器会下发一个装有客户信息的「小贴纸」，后续客户端请求服务器的时候，带上「小贴纸」，服务器就能认得了了</strong> .</p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http3.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http3.png" class="lazyload"></a></p><h3 id="2-明文传输双刃剑"><a class="markdownIt-Anchor" href="#2-明文传输双刃剑"></a> <em>2. 明文传输双刃剑</em></h3><p>明文意味着在传输过程中的信息，是可方便阅读的，通过浏览器的 F12 控制台或<code>Wireshark</code> 抓包都可以直接肉眼查看，为我们调试工作带了极大的便利性。</p><p>但是这正是这样，HTTP 的所有信息都暴露在了光天化日下，相当于 <strong>信息裸奔</strong> 。在传输的漫长的过程中，信息的内容都毫无隐私可言，很容易就能被窃取，如果里面有你的账号密码信息，那 <strong>你号没了</strong> 。</p><h3 id="3-不安全"><a class="markdownIt-Anchor" href="#3-不安全"></a> <em>3. 不安全</em></h3><p><strong>HTTP 比较严重的缺点就是不安全：</strong></p><ul><li>通信使用明文（不加密），内容可能会被窃听。比如， <strong>账号信息容易泄漏，那你号没了。</strong></li><li>不验证通信方的身份，因此有可能遭遇伪装。比如， <strong>访问假的淘宝、拼多多，那你钱没了。</strong></li><li>无法证明报文的完整性，所以有可能已遭篡改。比如， <strong>网页上植入垃圾广告，视觉污染，眼没了。</strong></li></ul><p>HTTP 的安全问题，可以用<code>HTTPS</code>的方式解决，也就是通过引入<code>SSL/TLS</code> 层，使得在安全上达到了极致。</p><p><font size="1">-------chuyuxuan: 比方说我的博客就是采用https加密的.<br></font></p><div class="note success">            <h1 id="07-http-性能消耗"><a class="markdownIt-Anchor" href="#07-http-性能消耗"></a> 07 HTTP 性能消耗</h1>          </div><p>HTTP 协议是基于  <strong>TCP/IP</strong> ，并且使用了「 <strong>请求 - 应答</strong> 」的通信模式，所以性能的关键就在这 <strong>两点</strong> 里。</p><h2 id="1-长连接"><a class="markdownIt-Anchor" href="#1-长连接"></a> <em>1. 长连接</em></h2><p>早期 HTTP/1.0 性能上的一个很大的问题，那就是每发起一个请求，都要新建一次 TCP 连接（三次握手），而且是串行请求，做了无畏的 TCP 连接建立和断开，增加了通信开销。</p><p>为了解决上述 TCP 连接问题，HTTP/1.1 提出了 <strong>长连接</strong> 的通信方式，也叫持久连接。这种方式的好处在于减少了 TCP 连接的重复建立和断开所造成的额外开销，减轻了服务器端的负载。</p><p>持久连接的特点是，只要任意一端没有明确提出断开连接，则保持 TCP 连接状态。</p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http5.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http5.png" class="lazyload"></a></p><h2 id="2-管道网络传输"><a class="markdownIt-Anchor" href="#2-管道网络传输"></a> <em>2. 管道网络传输</em></h2><p>HTTP/1.1 采用了长连接的方式，这使得管道（<code>pipeline</code>）网络传输成为了可能。</p><p>即可在同一个 TCP 连接里面，客户端可以发起多个请求，只要第一个请求发出去了，不必等其回来，就可以发第二个请求出去，可以 <strong>减少整体的响应时间。</strong></p><p>举例来说，客户端需要请求两个资源。以前的做法是，在同一个TCP连接里面，先发送 A 请求，然后等待服务器做出回应，收到后再发出 B 请求。管道机制则是允许浏览器同时发出 A 请求和 B 请求。</p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http6.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http6.png" class="lazyload"></a></p><p>但是服务器还是按照 <strong>顺序</strong> ，先回应 A 请求，完成后再回应 B 请求。要是 前面的回应特别慢，后面就会有许多请求排队等着。这称为「<code>队头堵塞</code>」。</p><h2 id="3-队头阻塞"><a class="markdownIt-Anchor" href="#3-队头阻塞"></a> <em>3. 队头阻塞</em></h2><p>「<code>请求 - 应答</code>」的模式加剧了 HTTP 的性能问题。</p><p>因为当顺序发送的请求序列中的一个请求因为某种原因被阻塞时，在后面排队的所有请求也一同被阻塞了，会招致客户端一直请求不到数据，这也就是「 <strong>队头阻塞</strong> 」。 <strong>好比上班的路上塞车</strong> 。</p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http7.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http7.png" class="lazyload"></a></p><p>总之 HTTP/1.1 的性能一般般，后续的 HTTP/2 和 HTTP/3 就是在优化 HTTP 的性能。</p><div class="note success">            <h1 id="08-http-与-https"><a class="markdownIt-Anchor" href="#08-http-与-https"></a> 08 HTTP 与 HTTPS</h1>          </div><ul><li><ol><li>HTTP 是超文本传输协议，信息是明文传输，存在安全风险的问题。HTTPS 则解决 HTTP 不安全的缺陷，在 TCP 和 HTTP 网络层之间加入了 SSL/TLS 安全协议，使得报文能够加密传输。</li></ol></li><li><ol start="2"><li>HTTP 连接建立相对简单， TCP 三次握手之后便可进行 HTTP 的报文传输。而 HTTPS 在 TCP 三次握手之后，还需进行 SSL/TLS 的握手过程，才可进入加密报文传输。</li></ol></li><li><ol start="3"><li>HTTP 的端口号是<code>80</code>，HTTPS 的端口号是 <code>443</code>。</li></ol></li><li><ol start="4"><li>HTTPS 协议需要向 CA（证书权威机构）申请数字证书，来保证服务器的身份是可信的。</li></ol></li></ul><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http8.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http8.png" class="lazyload"></a></p><h2 id="https-vs-http"><a class="markdownIt-Anchor" href="#https-vs-http"></a> HTTPS －－VS－－ HTTP</h2><h3 id="http-三个风险"><a class="markdownIt-Anchor" href="#http-三个风险"></a> HTTP 三个风险：</h3><ul><li><strong>窃听风险</strong> ，比如通信链路上可以获取通信内容，用户号容易没。</li><li><strong>篡改风险</strong> ，比如强制入垃圾广告，视觉污染，用户眼容易瞎。</li><li><strong>冒充风险</strong> ，比如冒充淘宝网站，用户钱容易没。</li></ul><h3 id="https-三个优点"><a class="markdownIt-Anchor" href="#https-三个优点"></a> HTTPS　三个优点：</h3><ul><li><p><strong>信息加密</strong> ：交互信息无法被窃取，但你的号会因为「自身忘记」账号而没。</p></li><li><p><strong>校验机制</strong> ：无法篡改通信内容，篡改了就不能正常显示，但百度「竞价排名」依然可以搜索垃圾广告。</p></li><li><p><strong>身份证书</strong> ：证明淘宝是真的淘宝网，但你的钱还是会因为「剁手」而没。</p></li></ul><p>可见，只要自身不做「恶」，SSL/TLS 协议是能保证通信是安全的。</p><h3 id="https-解决-http"><a class="markdownIt-Anchor" href="#https-解决-http"></a> HTTPS 解决 HTTP</h3><h4 id="1-混合加密"><a class="markdownIt-Anchor" href="#1-混合加密"></a> <em>1. 混合加密</em></h4><p>通过 <strong>混合加密</strong> 的方式可以保证信息的 <strong>机密性</strong> ，解决了窃听的风险。</p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http9.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http9.png" class="lazyload"></a></p><p>HTTPS 采用的是 <strong>对称加密</strong> 和 <strong>非对称加密</strong> 结合的「混合加密」方式：</p><ul><li>在通信建立前采用 <strong>非对称加密</strong> 的方式交换「会话秘钥」，后续就不再使用非对称加密。</li><li>在通信过程中全部使用 <strong>对称加密</strong> 的「会话秘钥」的方式加密明文数据。</li></ul><p>采用「混合加密」的方式的原因：</p><ul><li><strong>对称加密</strong> 只使用一个密钥，运算速度快，密钥必须保密，无法做到安全的密钥交换。</li><li><strong>非对称加密</strong> 使用两个密钥：公钥和私钥，公钥可以任意分发而私钥保密，解决了密钥交换问题但速度慢。</li></ul><h4 id="2-摘要算法"><a class="markdownIt-Anchor" href="#2-摘要算法"></a> <em>2. 摘要算法</em></h4><p><strong>摘要算法</strong> 用来实现 <strong>完整性</strong> ，能够为数据生成独一无二的「<code>指纹</code>」，用于校验数据的完整性，解决了篡改的风险。</p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http10.png" data-fancybox="group" data-caption="校验完整性" class="fancybox"><img alt="校验完整性" title="校验完整性" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http10.png" class="lazyload"></a></p><p>客户端在发送明文之前会通过摘要算法算出明文的「<code>指纹</code>」，发送的时候把「<code>指纹 + 明文</code>」一同加密成密文后，发送给服务器，服务器解密后，用相同的摘要算法算出发送过来的明文，通过比较客户端携带的「<code>指纹</code>」和当前算出的「<code>指纹</code>」做比较，若「<code>指纹</code>」相同，说明数据是完整的。</p><h3 id="3-数字证书"><a class="markdownIt-Anchor" href="#3-数字证书"></a> <em>3. 数字证书</em></h3><p>客户端先向服务器端索要公钥，然后用公钥加密信息，服务器收到密文后，用自己的私钥解密。</p><p>这就存在些问题，如何保证公钥不被篡改和信任度？</p><p>所以这里就需要借助第三方权威机构 CA （数字证书认证机构），将 <strong>服务器公钥放在数字证书</strong> （由数字证书认证机构颁发）中，只要证书是可信的，公钥就是可信的。</p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http11.png" data-fancybox="group" data-caption="数字证书工作流程" class="fancybox"><img alt="数字证书工作流程" title="数字证书工作流程" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http11.png" class="lazyload"></a></p><p>通过数字证书的方式保证服务器公钥的身份，解决冒充的风险。</p><div class="note success">            <h1 id="09-https-的连接交互"><a class="markdownIt-Anchor" href="#09-https-的连接交互"></a> 09 HTTPS  的连接交互</h1>          </div><h2 id="ssltls-协议基本流程"><a class="markdownIt-Anchor" href="#ssltls-协议基本流程"></a> SSL/TLS 协议基本流程：</h2><ul><li>客户端向服务器索要并验证服务器的公钥。</li><li>双方协商生产「<code>会话秘钥</code>」。</li><li>双方采用「<code>会话秘钥</code>」进行加密通信。</li></ul><p>前两步也就是 SSL/TLS 的建立过程，也就是握手阶段。</p><p>SSL/TLS 的「握手阶段」涉及 <strong>四次</strong> 通信，可见下图：</p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http13.png" data-fancybox="group" data-caption="HTTPS 连接建立过程" class="fancybox"><img alt="HTTPS 连接建立过程" title="HTTPS 连接建立过程" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http13.png" class="lazyload"></a></p><h2 id="ssltls-协议建立的详细流程"><a class="markdownIt-Anchor" href="#ssltls-协议建立的详细流程"></a> SSL/TLS 协议建立的详细流程：</h2><h3 id="1-clienthello"><a class="markdownIt-Anchor" href="#1-clienthello"></a> <em>1. ClientHello</em></h3><p>首先，由客户端向服务器发起加密通信请求，也就是 ClientHello 请求。</p><p>在这一步，客户端主要向服务器发送以下信息：</p><p>（1）客户端支持的 SSL/TLS 协议版本，如 TLS 1.2 版本。</p><p>（2）客户端生产的随机数（Client Random），后面用于生产「会话秘钥」。</p><p>（3）客户端支持的密码套件列表，如 RSA 加密算法。</p><h3 id="2-severhello"><a class="markdownIt-Anchor" href="#2-severhello"></a> <em>2. SeverHello</em></h3><p>服务器收到客户端请求后，向客户端发出响应，也就是 SeverHello。服务器回应的内容有如下内容：</p><ul><li><p>（1）确认 SSL/ TLS 协议版本，如果浏览器不支持，则关闭加密通信。</p></li><li><p>（2）服务器生产的随机数（Server Random），后面用于生产「会话秘钥」。</p></li><li><p>（3）确认的密码套件列表，如 RSA 加密算法。</p></li><li><p>（4）服务器的数字证书。</p></li></ul><h3 id="3客户端回应"><a class="markdownIt-Anchor" href="#3客户端回应"></a> <em>3.客户端回应</em></h3><p>客户端收到服务器的回应之后，首先通过浏览器或者操作系统中的 CA 公钥，确认服务器的数字证书的真实性。</p><p>如果证书没有问题，客户端会从数字证书中取出服务器的公钥，然后使用它加密报文，向服务器发送如下信息：</p><ul><li><p>（1）一个随机数（pre-master key）。该随机数会被服务器公钥加密。</p></li><li><p>（2）加密通信算法改变通知，表示随后的信息都将用「会话秘钥」加密通信。</p></li><li><p>（3）客户端握手结束通知，表示客户端的握手阶段已经结束。这一项同时把之前所有内容的发生的数据做个摘要，用来供服务端校验。</p></li></ul><p>上面第一项的随机数是整个握手阶段的第三个随机数，这样服务器和客户端就同时有三个随机数，接着就用双方协商的加密算法， <strong>各自生成</strong> 本次通信的「会话秘钥」。</p><h3 id="4-服务器的最后回应"><a class="markdownIt-Anchor" href="#4-服务器的最后回应"></a> <em>4. 服务器的最后回应</em></h3><p>服务器收到客户端的第三个随机数（pre-master key）之后，通过协商的加密算法，计算出本次通信的「会话秘钥」。然后，向客户端发生最后的信息：</p><ul><li><p>（1）加密通信算法改变通知，表示随后的信息都将用「会话秘钥」加密通信。</p></li><li><p>（2）服务器握手结束通知，表示服务器的握手阶段已经结束。这一项同时把之前所有内容的发生的数据做个摘要，用来供客户端校验。</p></li></ul><p>至此，整个 <code>SSL/TLS</code> 的握手阶段全部结束。接下来，客户端与服务器进入加密通信，就完全是使用普通的 HTTP 协议，只不过用「会话秘钥」<code>加密</code>内容。</p><div class="note success">            <h1 id="10-http11-http2-http3-演变"><a class="markdownIt-Anchor" href="#10-http11-http2-http3-演变"></a> 10 HTTP/1.1、HTTP/2、HTTP/3 演变</h1>          </div><h2 id="http11-相比-http10-性能上的改进"><a class="markdownIt-Anchor" href="#http11-相比-http10-性能上的改进"></a> HTTP/1.1 相比 HTTP/1.0 性能上的改进：</h2><ul><li>使用 <code>TCP 长连接</code>的方式改善了 HTTP/1.0 短连接造成的性能开销。</li><li>支持 管道（pipeline）网络传输，只要第一个请求发出去了，不必等其回来，就可以发第二个请求出去，可以减少整体的响应时间。</li></ul><p>但 HTTP/1.1 还是有<code>性能瓶颈</code>：</p><ul><li>请求 / 响应头部（Header）未经压缩就发送，首部信息越多延迟越大。只能压缩 Body 的部分；</li><li>发送冗长的首部。每次互相发送相同的首部造成的浪费较多；</li><li>服务器是按请求的顺序响应的，如果服务器响应慢，会招致客户端一直请求不到数据，也就是队头阻塞；</li><li>没有请求优先级控制；</li><li>请求只能从客户端开始，服务器只能被动响应。</li></ul><h2 id="http2-相比-http11-性能上的改进"><a class="markdownIt-Anchor" href="#http2-相比-http11-性能上的改进"></a> HTTP/2 相比 HTTP/1.1 性能上的改进</h2><p><code>HTTP/2</code>协议是<code>基于 HTTPS</code>的，所以 HTTP/2 的<code>安全性</code>也是有保障的。</p><h3 id="1-头部压缩"><a class="markdownIt-Anchor" href="#1-头部压缩"></a> <em>1. 头部压缩</em></h3><p><code>HTTP/2</code> 会 <strong>压缩头</strong> （Header）如果你同时发出多个请求，他们的头是一样的或是相似的，那么，协议会帮你 <strong>消除重复的分</strong> 。</p><p>这就是所谓的<code>HPACK</code> 算法：在客户端和服务器同时维护一张头信息表，所有字段都会存入这个表，生成一个索引号，以后就不发送同样字段了，只发送索引号，这样就 <strong>提高速度</strong> 了。</p><h3 id="2-二进制格式"><a class="markdownIt-Anchor" href="#2-二进制格式"></a> <em>2. 二进制格式</em></h3><p><code>HTTP/2</code> 不再像<code>HTTP/1.1</code>里的纯文本形式的报文，而是全面采用了 <strong>二进制格式。</strong></p><p>头信息和数据体都是二进制，并且统称为帧（frame）： <strong>头信息帧和数据帧</strong> 。</p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http14.png" data-fancybox="group" data-caption="报文区别" class="fancybox"><img alt="报文区别" title="报文区别" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http14.png" class="lazyload"></a></p><p>这样虽然对人不友好，但是对计算机非常友好，因为计算机只懂二进制，那么收到报文后，无需再将明文的报文转成二进制，而是直接解析二进制报文，这 <strong>增加了数据传输的效率</strong> 。</p><h3 id="3-数据流"><a class="markdownIt-Anchor" href="#3-数据流"></a> <em>3. 数据流</em></h3><p><code>HTTP/2</code>的数据包不是按顺序发送的，同一个连接里面连续的数据包，可能属于不同的回应。因此，必须要对数据包做标记，指出它属于哪个回应。</p><p>每个请求或回应的所有数据包，称为一个数据流（Stream）。</p><p>每个数据流都标记着一个独一无二的编号，其中规定客户端发出的数据流编号为奇数， 服务器发出的数据流编号为偶数</p><p>客户端还可以 <strong>指定数据流的优先级</strong> 。优先级高的请求，服务器就先响应该请求。</p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http15.png" data-fancybox="group" data-caption="HTT/1 ~ HTTP/2" class="fancybox"><img alt="HTT/1 ~ HTTP/2" title="HTT/1 ~ HTTP/2" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http15.png" class="lazyload"></a></p><h3 id="4-多路复用"><a class="markdownIt-Anchor" href="#4-多路复用"></a> <em>4. 多路复用</em></h3><p><code>HTTP/2</code> 是可以在 <strong>一个连接中并发多个请求或回应，而不用按照顺序一一对应</strong> 。</p><p>移除了 HTTP/1.1 中的串行请求，不需要排队等待，也就不会再出现「<code>队头阻塞</code>」问题， <strong>降低了延迟，大幅度提高了连接的利用率</strong> 。</p><p>举例来说，在一个 TCP 连接里，服务器收到了客户端 A 和 B 的两个请求，如果发现 A 处理过程非常耗时，于是就回应 A 请求已经处理好的部分，接着回应 B 请求，完成后，再回应 A 请求剩下的部分。</p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http16.png" data-fancybox="group" data-caption="多路复用" class="fancybox"><img alt="多路复用" title="多路复用" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http16.png" class="lazyload"></a></p><h3 id="5-服务器推送"><a class="markdownIt-Anchor" href="#5-服务器推送"></a> <em>5. 服务器推送</em></h3><p>HTTP/2 还在一定程度上改善了传统的「<code>请求 - 应答</code>」工作模式，服务不再是被动地响应，也可以 <strong>主动</strong> 向客户端发送消息。</p><p>举例来说，在浏览器刚请求 HTML 的时候，就提前把可能会用到的 JS、CSS 文件等静态资源主动发给客户端， <strong>减少延时的等待</strong> ，也就是<code>服务器推送</code>（Server Push，也叫 Cache Push）。</p><h2 id="http3-相比-http2-性能上的改进"><a class="markdownIt-Anchor" href="#http3-相比-http2-性能上的改进"></a> HTTP/3 相比 HTTP/2 性能上的改进</h2><p>HTTP/2 主要的问题在于：</p><pre><code>    多个 HTTP 请求在复用一个 TCP 连接，下层的 TCP 协议是不知道有多少个 HTTP 请求的。</code></pre><p>所以一旦发生了丢包现象，就会触发 TCP 的重传机制，这样在一个 TCP 连接中的 <strong>所有的 HTTP 请求都必须等待这个丢了的包被重传回来</strong> 。</p><ul><li>HTTP/1.1 中的管道（ pipeline）传输中如果有一个请求阻塞了，那么队列后请求也统统被阻塞住了.</li><li>HTTP/2 多请求复用一个TCP连接，一旦发生丢包，就会阻塞住所有的 HTTP 请求。</li></ul><p>这都是基于 TCP 传输层的问题，所以  <strong>HTTP/3 把 HTTP 下层的 TCP 协议改成了 UDP！</strong></p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http17.png" data-fancybox="group" data-caption="HTTP/1 ~ HTTP/3" class="fancybox"><img alt="HTTP/1 ~ HTTP/3" title="HTTP/1 ~ HTTP/3" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http17.png" class="lazyload"></a></p><p>UDP 发生是不管顺序，也不管丢包的，所以不会出现 HTTP/1.1 的<code>队头阻塞</code> 和 HTTP/2 的一个<code>丢包全部重传</code>问题。</p><p>大家都知道 UDP 是不可靠传输的，但基于 UDP 的  <strong>QUIC 协议</strong>  可以实现类似 TCP 的可靠性传输。</p><ul><li><p>QUIC 有自己的一套机制可以保证传输的可靠性的。当某个流发生丢包时，只会阻塞这个流， <strong>其他流不会受到影响</strong> 。</p></li><li><p>TL3 升级成了最新的 3 版本，头部压缩算法也升级成了 QPack。</p></li><li><p>HTTPS 要建立一个连接，要花费 6 次交互，先是建立三次握手，然后是 TLS/1.3 的三次握手。QUIC 直接把以往的 TCP 和 TLS/1.3 的 6 次交互 <strong>合并成了 3 次，减少了交互次数</strong> 。</p></li></ul><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http18.png" data-fancybox="group" data-caption="TCP HTTPS（TLS/1.3） 和 QUIC HTTPS" class="fancybox"><img alt="TCP HTTPS（TLS/1.3） 和 QUIC HTTPS" title="TCP HTTPS（TLS/1.3） 和 QUIC HTTPS" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/computer_network/http_sth/http18.png" class="lazyload"></a><br>所以， QUIC 是一个在 UDP 之上的 <strong>伪</strong>  TCP + TLS + HTTP/2 的多路复用的协议。</p><p>QUIC 是新协议，对于很多网络设备，根本不知道什么是 QUIC，只会当做 UDP，这样会出现新的问题。所以 <code>HTTP/3</code> 现在普及的进度非常的缓慢，不知道未来 UDP 是否能够逆袭 TCP。</p><hr><h2 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> <strong>参考文献:</strong></h2><p>[1] 上野 宣.图解HTTP.人民邮电出版社.</p><p>[2] 罗剑锋.透视HTTP协议.极客时间.</p><p>[3] <a href="https://coolshell.cn/articles/19840.html" target="_blank" rel="noopener">陈皓.HTTP的前世今.酷壳CoolShell.</a></p><p>[4] <a href="http://www.ruanyifeng.com/blog/2016/08/http.html" target="_blank" rel="noopener">阮一峰.HTTP 协议入门.阮一峰的网络日志.</a></p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; 
      
    
    </summary>
    
    
      <category term="▶计算机网络" scheme="https://chuyuxuan.xyz/categories/%E2%96%B6%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="计算机网络" scheme="https://chuyuxuan.xyz/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
      <category term="Http" scheme="https://chuyuxuan.xyz/tags/Http/"/>
    
  </entry>
  
  <entry>
    <title>Window下照片快速批量命名</title>
    <link href="https://chuyuxuan.xyz/2020/03/05/%E2%96%B6%E5%B0%8F%E6%8A%80%E8%83%BD/%E7%94%B5%E8%84%91%E5%B0%8F%E6%8A%80%E5%B7%A7/window%E4%B8%8B%E5%BF%AB%E9%80%9F%E5%91%BD%E5%90%8D/"/>
    <id>https://chuyuxuan.xyz/2020/03/05/%E2%96%B6%E5%B0%8F%E6%8A%80%E8%83%BD/%E7%94%B5%E8%84%91%E5%B0%8F%E6%8A%80%E5%B7%A7/window%E4%B8%8B%E5%BF%AB%E9%80%9F%E5%91%BD%E5%90%8D/</id>
    <published>2020-03-05T05:16:38.000Z</published>
    <updated>2020-04-13T14:55:18.927Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><strong>1、新建立一个文件夹，往里面丢入需要命名的照片（一般我都是这个需求）。</strong><br><strong>2、新建一个txt文本，输入：</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">set a=0</span><br><span class="line">setlocal EnableDelayedExpansion</span><br><span class="line">for %%n in (*.png) do (</span><br><span class="line">set /A a+=1</span><br><span class="line">ren "%%n" "!a!.png"</span><br><span class="line">)</span><br></pre></td></tr></table></figure></div><p>其中<code>ren &quot;%%n&quot; &quot;!a!.png&quot;</code> 为关键代码，<code>ren A B</code> 把A命名给B。</p><p><strong>注意，不要改变源码里的除了后缀名之外的任何东西，否则会出问题。</strong></p><h1 id="以下为代码解析"><a class="markdownIt-Anchor" href="#以下为代码解析"></a> 以下为代码解析</h1><p>至于<code>setlocal enabledelayedexpansion</code>&quot;延迟环境变量扩展&quot;.</p><pre><code>    set var=test    echo %var%</code></pre><p>给var赋值为test,用test把%var%这个变量名替换,这是<code>环境变量扩展</code>.</p><p><code>延迟环境变量扩展</code>:CMD在解释命令时,首先会把一条完整的命令进行读取,然后进行匹配操作,匹配时他会把命令里的变量用变量的值个替换掉,然后执行这个替换好的命令.问题就出在&quot;一条完整的命令&quot;,在BAT中,IF FOR这样的命令都可以加括号,将一些命令嵌套在里面执行.</p><p>这样的话对于一条可以加扩号嵌其他命令的命令,他的完整格式就是<br>for %%i in (…)这样一个整体.此时,如果我们如果在括号里面嵌入一些设置变量值的命令,就会出现问题了!</p><pre><code>    @echo off    for /l %%i in (1,1,5) do (        set var=%%i        echo %var%    )</code></pre><p>按理说执行结果应该是</p><pre><code>    1    2    3    4    5</code></pre><p>但执行后却显示5个空行的错误提示!为什么?根据我们上面说的知识来理解</p><pre><code>    @echo off    set var=test    for /l %%i in (1,1,5) do (        set var=%%i        echo %var%    )</code></pre><p>这个就会打印5个test了，说明<code>for /l %%i in (1,1,5)</code>没有起作用。</p><p>通过这两个例子,大家因该已经理解,如果只有环境变量扩展这个过程的话,如果我们在可以嵌套命令的命令中执行赋值操作时,会让我们的BAT出现给变量赋值的问题.那么这个时候&quot;延迟环境变量扩展&quot;,这个概念就被提出来了<br>在批处理中,我们可以用<code>setloacl ENABLEDELAYEDEXPANSION</code>这个命令来启用&quot;延迟环境变量扩展&quot; 在我们启用了&quot;延迟环境变量扩展&quot;后,当CMD在解释涵有嵌套格式的命令时,他会把嵌套的命令一条一条的先执行一次,然后再进行匹配操作,这样我们的赋值操作就会完成.并且再&quot;延迟环境变量扩展&quot;启用后,CMD会用!号来判断这是不是一个变量,如没启用来变量 用%name%这样的格式判断,启用后就用!name!这样的格式判断了,这个符号我们需要注意!<br>例子:</p><pre><code>    @echo off    setlocal ENABLEDELAYEDEXPANSION    set var=test    for /l %%i in (1,1,5) do (        set var=%%i        echo !var!    )</code></pre><p>执行结果应该是</p><pre><code>    1    2    3    4    5</code></pre><p>这样大家因该明白什么是延迟环境变量扩展了吧.<br>再来一个例子</p><pre><code>    @echo off    set var=test &amp; echo %test%    pause</code></pre><p>这条命令放在一行,表示他是一条完整的命令,不启用&quot;延迟环境变量扩展&quot;,就会出现上面的赋值错误!改成这样</p><pre><code>    @echo off    setlocal ENABLEDELAYEDEXPANSION    set var=test &amp; echo !var!    pause</code></pre><p>很容易理解了吧!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; 
      
    
    </summary>
    
    
      <category term="▶小技能" scheme="https://chuyuxuan.xyz/categories/%E2%96%B6%E5%B0%8F%E6%8A%80%E8%83%BD/"/>
    
    
      <category term="windows" scheme="https://chuyuxuan.xyz/tags/windows/"/>
    
      <category term="cmd" scheme="https://chuyuxuan.xyz/tags/cmd/"/>
    
      <category term="bat" scheme="https://chuyuxuan.xyz/tags/bat/"/>
    
  </entry>
  
  <entry>
    <title>计算机图形学作业4</title>
    <link href="https://chuyuxuan.xyz/2020/03/05/%E2%96%B6%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/%E4%BD%9C%E4%B8%9A4/"/>
    <id>https://chuyuxuan.xyz/2020/03/05/%E2%96%B6%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/%E4%BD%9C%E4%B8%9A4/</id>
    <published>2020-03-05T04:16:38.000Z</published>
    <updated>2020-05-15T08:24:05.404Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="361-基础训练"><a class="markdownIt-Anchor" href="#361-基础训练"></a> 3.6.1 基础训练</h1><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/202003057.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/202003057.png" class="lazyload"></a><br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/202003052.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/202003052.png" class="lazyload"></a><br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/202003053.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/202003053.png" class="lazyload"></a><br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/202003054.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/202003054.png" class="lazyload"></a><br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/202003055.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/202003055.png" class="lazyload"></a><br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/202003056.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/202003056.png" class="lazyload"></a></p><h1 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h1><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//===========3-1=============</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">glPointSize</span> <span class="params">(GLfloat size)</span></span>;<span class="comment">// size表示点的宽度，必须大于0。默认值为1.0。宽度为5.1的点显示为5×5像素的正方形</span></span><br><span class="line"><span class="keyword">void</span> glLineWidth GLfloat width);<span class="comment">// width表示宽度，同样也是像素表示</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//===========3-2==============</span></span><br><span class="line"></span><br><span class="line">glEnable(GL_POINT_SMOOTH) <span class="comment">//启用点的反走样。</span></span><br><span class="line">glEnable(GL_LINE_SMOOTH) <span class="comment">//启用线段的反走样。</span></span><br><span class="line">glEnable(GL_POLYGON_SMOOTH) <span class="comment">//启用多边形的反走样。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//===========3-3==============</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glut\glut.h&gt; </span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">myDisplay</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    glClear(GL_COLOR_BUFFER_BIT);</span><br><span class="line">    glRectf(<span class="number">-0.8f</span>, <span class="number">-0.8f</span>, <span class="number">0.8f</span>, <span class="number">0.8f</span>); </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    glutInit(&amp;argc, argv);</span><br><span class="line">    glutInitDisplayMode(GLUT_RGB | GLUT_SINGLE);</span><br><span class="line">    glutInitWindowSize(<span class="number">200</span>, <span class="number">200</span>);;</span><br><span class="line">    glutCreateWindow(<span class="string">"白色正方形"</span>);  </span><br><span class="line">    glutDisplayFunc(&amp;myDisplay);</span><br><span class="line">    glutMainLoop();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//===========3-4==============</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glut/glut.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Reshape</span><span class="params">(<span class="keyword">int</span> w, <span class="keyword">int</span> h)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    glViewport(w / <span class="number">4</span>, h / <span class="number">4</span>, w / <span class="number">2</span>, h / <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Paint</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    glClearColor(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    glClear(GL_COLOR_BUFFER_BIT); </span><br><span class="line">    glBegin(GL_TRIANGLES);</span><br><span class="line">    &#123;</span><br><span class="line">        glVertex2f(<span class="number">-0.5</span>, <span class="number">0</span>);</span><br><span class="line">        glVertex2f(<span class="number">0.5</span>, <span class="number">0</span>);</span><br><span class="line">        glVertex2f(<span class="number">0</span>, <span class="number">0.86</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    glColor3f(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    glEnd();</span><br><span class="line">    glFlush();&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    glutInit(&amp;argc, argv); </span><br><span class="line">    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGBA);</span><br><span class="line">    glutInitWindowSize(<span class="number">200</span>, <span class="number">200</span>); </span><br><span class="line">    glutCreateWindow(<span class="string">"红色正三角形"</span>); </span><br><span class="line">    glutReshapeFunc(Reshape);</span><br><span class="line">    glutDisplayFunc(Paint); </span><br><span class="line">    glutMainLoop(); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//===========3-5==============</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glut\glut.h&gt; </span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Reshape</span><span class="params">(<span class="keyword">int</span> w, <span class="keyword">int</span> h)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    glViewport(w / <span class="number">4</span>, h / <span class="number">4</span>, w / <span class="number">2</span>, h / <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">myDisplay</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    glClearColor(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>);<span class="comment">//背景色</span></span><br><span class="line">    glClear(GL_COLOR_BUFFER_BIT);</span><br><span class="line">    glBegin(GL_TRIANGLE_STRIP); <span class="comment">// 两个三角形合成四边形</span></span><br><span class="line">    &#123; </span><br><span class="line">        glVertex2f(<span class="number">-0.8</span>, <span class="number">-0.8</span>);</span><br><span class="line">        glVertex2f(<span class="number">0.5</span>, <span class="number">-0.8</span>);</span><br><span class="line">        glVertex2f(<span class="number">-0.5</span>, <span class="number">0.8</span>);</span><br><span class="line">        glVertex2f(<span class="number">0.8</span>, <span class="number">0.8</span>);</span><br><span class="line">        glColor3ub(<span class="number">30</span>, <span class="number">144</span>, <span class="number">255</span>);</span><br><span class="line">    &#125; </span><br><span class="line">    glEnd(); <span class="comment">// 结束</span></span><br><span class="line">    glFlush();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    glutInit(&amp;argc, argv);</span><br><span class="line">    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGBA);</span><br><span class="line">    glutInitWindowSize(<span class="number">200</span>, <span class="number">200</span>);;</span><br><span class="line">    glutCreateWindow(<span class="string">"蓝色四边形"</span>);</span><br><span class="line">    glutReshapeFunc(Reshape);</span><br><span class="line">    glutDisplayFunc(&amp;myDisplay);</span><br><span class="line">    glutMainLoop();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//===========3-6==============</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glut\glut.h&gt; </span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Reshape</span><span class="params">(<span class="keyword">int</span> w, <span class="keyword">int</span> h)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    glViewport(w / <span class="number">4</span>, h / <span class="number">4</span>, w / <span class="number">2</span>, h / <span class="number">2</span>);</span><br><span class="line">    glLoadIdentity();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Hint</span><span class="params">()</span> <span class="comment">// 初始化, 指定点的大小</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    glPointSize(<span class="number">10.5</span>); <span class="comment">// 点的大小=10.5</span></span><br><span class="line">    glEnable(GL_POINT_SMOOTH);<span class="comment">//反走样</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">myDisplay</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    glClearColor(<span class="number">0</span>,<span class="number">34</span>,<span class="number">181</span>, <span class="number">1</span>);<span class="comment">//背景色</span></span><br><span class="line">    glClear(GL_COLOR_BUFFER_BIT);</span><br><span class="line">    glBegin(GL_POINTS);</span><br><span class="line">    &#123;</span><br><span class="line">        glVertex2f(<span class="number">-0.6</span>, <span class="number">-0.6</span>);</span><br><span class="line">        glVertex2f(<span class="number">-0.4</span>, <span class="number">-0.4</span>);</span><br><span class="line">        glVertex2f(<span class="number">-0.1</span>, <span class="number">-0.1</span>);</span><br><span class="line">        glVertex2f(<span class="number">0.3</span>, <span class="number">0.3</span>);</span><br><span class="line">        glVertex2f(<span class="number">0.6</span>, <span class="number">0.6</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    glEnd(); <span class="comment">// 结束</span></span><br><span class="line">    glFlush();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    glutInit(&amp;argc, argv);</span><br><span class="line">glutInitDisplayMode(GLUT_SINGLE | GLUT_RGBA);</span><br><span class="line">    glutInitWindowSize(<span class="number">200</span>, <span class="number">200</span>); </span><br><span class="line">    glPointSize(<span class="number">10.5</span>);</span><br><span class="line">    glutCreateWindow(<span class="string">"点的反走样"</span>);</span><br><span class="line">    glutReshapeFunc(Reshape);</span><br><span class="line">    glutDisplayFunc(&amp;myDisplay);</span><br><span class="line">    Hint();</span><br><span class="line">    glutMainLoop();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//===========3-7==============</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glut\glut.h&gt; </span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Reshape</span><span class="params">(<span class="keyword">int</span> w, <span class="keyword">int</span> h)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    glViewport(w / <span class="number">4</span>, h / <span class="number">4</span>, w / <span class="number">2</span>, h / <span class="number">2</span>);</span><br><span class="line">    glLoadIdentity();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Hint</span><span class="params">()</span> <span class="comment">// 初始化</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    glLineWidth(<span class="number">4.5</span>); <span class="comment">// 线宽=4.5</span></span><br><span class="line">    glEnable(GL_LINE_SMOOTH);<span class="comment">//反走样</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">myDisplay</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="comment">//背景色</span></span><br><span class="line">    glClear(GL_COLOR_BUFFER_BIT);</span><br><span class="line">    glClearColor(<span class="number">0</span>, <span class="number">17</span>, <span class="number">90</span>, <span class="number">1</span>);</span><br><span class="line">    glBegin(GL_LINE_LOOP);</span><br><span class="line">    &#123;</span><br><span class="line">        glVertex2f(<span class="number">-0.6</span>, <span class="number">-0.3</span>);</span><br><span class="line">        glVertex2f(<span class="number">0.6</span>, <span class="number">0.3</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    glEnd(); <span class="comment">// 结束</span></span><br><span class="line">    glFlush();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    glutInit(&amp;argc, argv);</span><br><span class="line">    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGBA);</span><br><span class="line">    glutInitWindowSize(<span class="number">200</span>, <span class="number">200</span>);</span><br><span class="line">    glPointSize(<span class="number">10.5</span>);</span><br><span class="line">    glutCreateWindow(<span class="string">"线的反走样"</span>);</span><br><span class="line">    glutReshapeFunc(Reshape);</span><br><span class="line">    glutDisplayFunc(&amp;myDisplay);</span><br><span class="line">    Hint();</span><br><span class="line">    glutMainLoop();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//===========3-8==============</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glut/glut.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Viewport</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> w, <span class="keyword">int</span> h)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    glViewport(x, y, w, h); <span class="comment">// 定义视口</span></span><br><span class="line">    glLoadIdentity(); <span class="comment">// 消除其他视口的影响, 函数介绍见后续章节</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Paint</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> w = glutGet(GLUT_WINDOW_WIDTH) ; <span class="comment">// 计算视区宽度</span></span><br><span class="line">    <span class="keyword">int</span> h = glutGet(GLUT_WINDOW_HEIGHT) ; <span class="comment">// 计算视区高度</span></span><br><span class="line">    glClearColor(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>); <span class="comment">// 背景</span></span><br><span class="line">    glClear(GL_COLOR_BUFFER_BIT); <span class="comment">// 清除颜色缓存</span></span><br><span class="line">    Viewport(<span class="number">0</span>, <span class="number">0</span>, w/<span class="number">2</span>, h); <span class="comment">// 左方视口</span></span><br><span class="line">    glColor3f(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>); <span class="comment">// 设置当前颜色,红色</span></span><br><span class="line">    glRectf(<span class="number">-0.8</span>, <span class="number">-0.8</span>, <span class="number">0.8</span>, <span class="number">0.8</span>); <span class="comment">// 定义正方形</span></span><br><span class="line">    Viewport(w/<span class="number">2</span>, <span class="number">0</span>, w/<span class="number">2</span>, h); <span class="comment">// 右方视口</span></span><br><span class="line">    glColor3f(<span class="number">0</span>, <span class="number">102</span>, <span class="number">187</span>); <span class="comment">// 设置当前颜色, 蓝色</span></span><br><span class="line">    glutSolidTeapot(<span class="number">0.6</span>); <span class="comment">// 定义犹他茶壶</span></span><br><span class="line">    glFlush(); <span class="comment">// 强制OpenGL命令序列在有限的时间内完成执行</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    glutInit(&amp;argc, argv); <span class="comment">// 初始化GLUT, 记录main()函数的参数</span></span><br><span class="line">    glutInitWindowSize(<span class="number">400</span>, <span class="number">200</span>);</span><br><span class="line">    glutCreateWindow(<span class="string">"多视口演示"</span>); <span class="comment">// 指定窗口标题</span></span><br><span class="line">    glutDisplayFunc(Paint); <span class="comment">// 指定场景绘制函数</span></span><br><span class="line">    glutMainLoop(); <span class="comment">// 开始执行</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//===========3-9==============</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glut/glut.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Viewport</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> w, <span class="keyword">int</span> h)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    glViewport(x, y, w, h); <span class="comment">// 定义视口</span></span><br><span class="line">    glLoadIdentity(); <span class="comment">// 消除其他视口的影响, 函数介绍见后续章节</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Paint</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> w = glutGet(GLUT_WINDOW_WIDTH) ; <span class="comment">// 计算视区宽度</span></span><br><span class="line">    <span class="keyword">int</span> h = glutGet(GLUT_WINDOW_HEIGHT) ; <span class="comment">// 计算视区高度</span></span><br><span class="line">    glClearColor(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>); <span class="comment">// 背景</span></span><br><span class="line">    glClear(GL_COLOR_BUFFER_BIT); <span class="comment">// 清除颜色缓存</span></span><br><span class="line">    Viewport(<span class="number">0</span>, <span class="number">0</span>, w / <span class="number">2</span>, h/<span class="number">2</span>); <span class="comment">// 左方视口</span></span><br><span class="line">    glColor3f(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>); <span class="comment">// 设置当前颜色,红色</span></span><br><span class="line">    glRectf(<span class="number">-0.8</span>, <span class="number">-0.8</span>, <span class="number">0.8</span>, <span class="number">0.8</span>); <span class="comment">// 定义正方形</span></span><br><span class="line">    Viewport(w / <span class="number">2</span>, <span class="number">0</span>, w / <span class="number">2</span>, h/<span class="number">2</span>); <span class="comment">// 右方视口</span></span><br><span class="line">    glColor3f(<span class="number">0</span>, <span class="number">102</span>, <span class="number">187</span>); <span class="comment">// 设置当前颜色, 蓝色</span></span><br><span class="line">    glutSolidTeapot(<span class="number">0.6</span>); <span class="comment">// 定义犹他茶壶</span></span><br><span class="line">    Viewport(<span class="number">0</span>, h/<span class="number">2</span>, w , h /<span class="number">2</span>); <span class="comment">// 上方视口</span></span><br><span class="line">    glColor3f(<span class="number">0</span>, <span class="number">108</span>, <span class="number">115</span>); <span class="comment">// 设置当前颜色,红色</span></span><br><span class="line">    glBegin(GL_TRIANGLES); <span class="comment">// 定义三角形</span></span><br><span class="line">    &#123;</span><br><span class="line">        glVertex2f(<span class="number">-0.8</span>, <span class="number">-0.8</span>);</span><br><span class="line">        glVertex2f(<span class="number">0.8</span>, <span class="number">-0.8</span>);</span><br><span class="line">        glVertex2f(<span class="number">0</span>, <span class="number">0.8</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    glEnd();</span><br><span class="line">    glFlush(); <span class="comment">// 强制OpenGL命令序列在有限的时间内完成执行</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    glutInit(&amp;argc, argv); <span class="comment">// 初始化GLUT, 记录main()函数的参数</span></span><br><span class="line">    glutInitWindowSize(<span class="number">200</span>, <span class="number">200</span>);</span><br><span class="line">    glutCreateWindow(<span class="string">"多视口演示"</span>); <span class="comment">// 指定窗口标题</span></span><br><span class="line">    glutDisplayFunc(Paint); <span class="comment">// 指定场景绘制函数</span></span><br><span class="line">    glutMainLoop(); <span class="comment">// 开始执行</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; 
      
    
    </summary>
    
    
      <category term="▶计算机图形学" scheme="https://chuyuxuan.xyz/categories/%E2%96%B6%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/"/>
    
    
      <category term="openGL" scheme="https://chuyuxuan.xyz/tags/openGL/"/>
    
      <category term="计算机图形学" scheme="https://chuyuxuan.xyz/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>OpenGL 在Win下开发环境配置</title>
    <link href="https://chuyuxuan.xyz/2020/03/03/%E2%96%B6%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/openGL_bulid/"/>
    <id>https://chuyuxuan.xyz/2020/03/03/%E2%96%B6%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/openGL_bulid/</id>
    <published>2020-03-03T14:26:54.075Z</published>
    <updated>2020-03-05T07:28:00.228Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>配着玩意儿确实挺麻烦的。按着<a href="https://learnopengl-cn.github.io/01%20Getting%20started/02%20Creating%20a%20window/" target="_blank" rel="noopener"><em><code>官方文档</code></em></a>的步骤一步一步地踩了过去。当然，这里也借鉴了几位大佬的指点，终于把环境给配置好了。</p><h1 id="环境介绍"><a class="markdownIt-Anchor" href="#环境介绍"></a> 环境介绍</h1><ul><li><a href="https://www.microsoft.com/zh-cn/software-download/windows10" target="_blank" rel="noopener">Window 10</a></li><li><a href="https://visualstudio.microsoft.com/zh-hans/downloads/" target="_blank" rel="noopener">Visual Studio 2019</a></li><li><a href="http://www.glfw.org/download.html" target="_blank" rel="noopener">GLFW</a></li><li><a href="http://glad.dav1d.de/" target="_blank" rel="noopener">GLAD</a></li><li><a href="https://cmake.org/download/" target="_blank" rel="noopener">CMake</a></li></ul><h1 id="下载并编译glfw库"><a class="markdownIt-Anchor" href="#下载并编译glfw库"></a> 下载并编译GlFW库</h1><div class="note success">            <h2 id="1把cmake-和glfw-下载到本地并且把cmake安装好-安装就平时安装ok"><a class="markdownIt-Anchor" href="#1把cmake-和glfw-下载到本地并且把cmake安装好-安装就平时安装ok"></a> 1.把<a href="https://cmake.org/download/" target="_blank" rel="noopener">CMake</a> 和<a href="http://www.glfw.org/download.html" target="_blank" rel="noopener">GLFW</a> 下载到本地，并且把<code>CMake</code>安装好。安装就平时安装OK。</h2><h2 id="2解压glfw"><a class="markdownIt-Anchor" href="#2解压glfw"></a> 2.解压<code>GlFW</code>。</h2><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030301.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030301.png" class="lazyload"></a></p><h2 id="3打开cmake设置source-code为glfw解压目录build目录为glfw解压目录下新建的build文件夹"><a class="markdownIt-Anchor" href="#3打开cmake设置source-code为glfw解压目录build目录为glfw解压目录下新建的build文件夹"></a> 3.打开<code>CMake</code>，设置<code>source code</code>为<code>GLFW</code>解压目录，<code>build</code>目录为<code>GLFW</code>解压目录下新建的<code>build</code>文件夹。</h2><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030302.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030302.png" class="lazyload"></a></p><h2 id="4configure后面的值默认即可"><a class="markdownIt-Anchor" href="#4configure后面的值默认即可"></a> 4.<code>Configure</code>，后面的值默认即可。</h2><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030303.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030303.png" class="lazyload"></a></p><h2 id="5然后再次点击configure并且generate"><a class="markdownIt-Anchor" href="#5然后再次点击configure并且generate"></a> 5.然后再次点击<code>Configure</code>，并且<code>Generate</code>。</h2><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030301.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030301.gif" class="lazyload"></a></p><h2 id="6完成后在build目录下生成了visual-studio的解决方案打开即可"><a class="markdownIt-Anchor" href="#6完成后在build目录下生成了visual-studio的解决方案打开即可"></a> 6.完成后，在<code>build</code>目录下生成了<code>Visual Studio的解决方案</code>，打开即可。</h2><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030305.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030305.png" class="lazyload"></a><br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030306.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030306.png" class="lazyload"></a></p><h2 id="7这时在visual-studio-的buildsrcdebug目录下得到了编译好的glfw3lib库文件我们把它放好留在后面备用"><a class="markdownIt-Anchor" href="#7这时在visual-studio-的buildsrcdebug目录下得到了编译好的glfw3lib库文件我们把它放好留在后面备用"></a> 7.这时在<code>visual Studio</code> 的<code>build\src\Debug\</code>目录下，得到了编译好的<code>glfw3.lib</code>库文件，我们把它放好，留在后面备用。</h2><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030307.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030307.png" class="lazyload"></a></p>          </div><h1 id="下载glad库"><a class="markdownIt-Anchor" href="#下载glad库"></a> 下载<code>glad</code>库。</h1><div class="note info">            <p>在浏览器中打开<a href="http://glad.dav1d.de/" target="_blank" rel="noopener">Glad在线服务页面</a> ,修改语言为<code>C/C++</code>，选择<code>OpenGL</code>，API选择使用的对应OpenGL版本(官方推荐3.3以上的)，Profile选择<code>Core</code>，勾上<code>Generate a loader</code>，点击<code>GENERATE</code>，在跳转后的界面里下载压缩好的<code>glad</code>即可。<br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030302.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030302.gif" class="lazyload"></a></p>          </div><h1 id="配置visual-studio工程"><a class="markdownIt-Anchor" href="#配置visual-studio工程"></a> 配置Visual Studio工程</h1><p>1.建立一个新的目录，里面包含Libs和Include文件夹，将GLFW源码中的include\文件下的内容、GLFW编译后的库、下载的GLAD库，放入该新建好的目录内，这样方便以后工程可以复用。这里提供建立好的文件<a href="https://gitee.com/chuyuxuan/blog/raw/master/homeworks/openGL.zip" target="_blank" rel="noopener">下载</a>，不过是否适配你的电脑就不好说了。配置项目如下所示。<br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030308.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030308.png" class="lazyload"></a><br>2. Visual Studio 新建一个工程，把上一步的配置好的目录放进去。（图中的<code>openGL</code>为<strong>上一步</strong>所创建的目录名，其实也可以不放，只要在后期编译时，引入真确的路径即可。）<br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030309.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030309.png" class="lazyload"></a></p><p>3.配置Visual studio 新工程，<strong>注意文件路径以及文件名称</strong>。</p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030310.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030310.png" class="lazyload"></a><br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030312.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030312.png" class="lazyload"></a><br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030313.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030313.png" class="lazyload"></a><br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030314.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030314.png" class="lazyload"></a></p><p>4.添加<code>opengl\src\glad.c</code>源文件。<br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030303.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030303.gif" class="lazyload"></a></p><p>5.编译代码并进行测试。<br>源码如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glad/glad.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;GLFW/glfw3.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">framebuffer_size_callback</span><span class="params">(GLFWwindow* window, <span class="keyword">int</span> width, <span class="keyword">int</span> height)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    glfwInit();</span><br><span class="line">    glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, <span class="number">3</span>);</span><br><span class="line">    glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, <span class="number">3</span>);</span><br><span class="line">    glfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE);</span><br><span class="line"></span><br><span class="line">    GLFWwindow *window = glfwCreateWindow(<span class="number">800</span>, <span class="number">600</span>, <span class="string">"LearnOpenGL"</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">if</span> (window == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Failed to create GLFW window"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        glfwTerminate();</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    glfwMakeContextCurrent(window);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!gladLoadGLLoader((GLADloadproc)glfwGetProcAddress)) &#123;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"Failed to initialize GLAD"</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    glViewport(<span class="number">0</span>, <span class="number">0</span>, <span class="number">800</span>, <span class="number">600</span>);</span><br><span class="line"></span><br><span class="line">    glfwSetFramebufferSizeCallback(window, framebuffer_size_callback);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (!glfwWindowShouldClose(window)) &#123;</span><br><span class="line">        glfwSwapBuffers(window);</span><br><span class="line">        glfwPollEvents();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    glfwTerminate();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">framebuffer_size_callback</span><span class="params">(GLFWwindow* window, <span class="keyword">int</span> width, <span class="keyword">int</span> height)</span> </span>&#123;</span><br><span class="line">    glViewport(<span class="number">0</span>, <span class="number">0</span>, width, height);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>运行结果如下所示。<br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030304.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030304.gif" class="lazyload"></a></p><h1 id="好啦大功告成接下来就开始愉快的写作业吧"><a class="markdownIt-Anchor" href="#好啦大功告成接下来就开始愉快的写作业吧"></a> 好啦！大功告成，接下来就开始愉快的写作业吧！</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; 
      
    
    </summary>
    
    
      <category term="▶计算机图形学" scheme="https://chuyuxuan.xyz/categories/%E2%96%B6%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/"/>
    
    
      <category term="openGL" scheme="https://chuyuxuan.xyz/tags/openGL/"/>
    
      <category term="Visual studio 2019" scheme="https://chuyuxuan.xyz/tags/Visual-studio-2019/"/>
    
  </entry>
  
  <entry>
    <title>Vue小基础大集合</title>
    <link href="https://chuyuxuan.xyz/2020/03/02/%E2%96%B6%E5%89%8D%E7%AB%AF/Vue/Vue%E5%9F%BA%E7%A1%80/vue%E5%A4%A7%E8%87%B4%E9%A1%B9%E7%9B%AE/"/>
    <id>https://chuyuxuan.xyz/2020/03/02/%E2%96%B6%E5%89%8D%E7%AB%AF/Vue/Vue%E5%9F%BA%E7%A1%80/vue%E5%A4%A7%E8%87%B4%E9%A1%B9%E7%9B%AE/</id>
    <published>2020-03-02T14:17:33.068Z</published>
    <updated>2020-04-13T13:05:03.011Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="挂载"><a class="markdownIt-Anchor" href="#挂载"></a> 挂载</h1><p><strong>在写Vue之前，要引入<code>Vue.js</code>,除了下载下来，还可以使用官方的CDN加速的Vue.js:</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//开发环境版本，包含了有帮助的命令行警告 </span></span><br><span class="line">&lt;script src=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></div><p><strong>整体格式如下</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"cn"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Vue<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">   </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"tup"</span>&gt;</span> </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">   </span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el: <span class="string">'#tup'</span>,<span class="comment">//所挂载的容器ID</span></span></span><br><span class="line">            data: &#123;</span><br><span class="line"><span class="actionscript">                        <span class="comment">//填写容器数据</span></span></span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line"><span class="actionscript">                A: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;  &#125;,</span></span><br><span class="line"><span class="actionscript">                B: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;  &#125;  <span class="comment">//可执行函数</span></span></span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h1 id="v-on-事件绑定"><a class="markdownIt-Anchor" href="#v-on-事件绑定"></a> V-on 事件绑定</h1><h3 id="可以用-来代替-v-on快速绑定一般是把函数与操作标签绑定"><a class="markdownIt-Anchor" href="#可以用-来代替-v-on快速绑定一般是把函数与操作标签绑定"></a> <strong>可以用 <code>@</code>来代替 <code>v-on</code>，快速绑定一般是把<code>函数</code>与操作标签绑定。</strong></h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Vue<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    body &#123;</span><br><span class="line">        background-color: rgb(15, 16, 68);</span><br><span class="line">        color: white;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-id">#jian</span> &#123;</span></span><br><span class="line">       color: rgb(29, 207, 73);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-id">#jia</span> &#123;</span></span><br><span class="line">        color: rgb(29, 207, 73);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"bar"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"jian"</span> <span class="attr">value</span>=<span class="string">"减"</span> @<span class="attr">click</span>=<span class="string">"add"</span>&gt;</span>       </span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"show"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;num&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"jia"</span> <span class="attr">value</span>=<span class="string">"加"</span> @<span class="attr">click</span>=<span class="string">"sub"</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el: <span class="string">'#bar'</span>,</span></span><br><span class="line">            data: &#123;</span><br><span class="line">                num: 28,</span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line"><span class="actionscript">                add: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">"add"</span>);</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.num ++;</span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="actionscript">                sub: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">"sub"</span>);</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.num --;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Vue/v-on1.png" data-fancybox="group" data-caption="1" class="fancybox"><img alt="1" title="1" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Vue/v-on1.png" class="lazyload"></a><br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Vue/v-on2.png" data-fancybox="group" data-caption="2" class="fancybox"><img alt="2" title="2" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Vue/v-on2.png" class="lazyload"></a></p><h1 id="v-text-值"><a class="markdownIt-Anchor" href="#v-text-值"></a> V-text 值</h1><p>###　<strong>在<code>双标签</code>中，除了在标签内添加<code>v-text</code>外，还可以用<code>插值表达式</code>：<code></code>来代替数据。</strong><br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Vue/v-text1.png" data-fancybox="group" data-caption="3" class="fancybox"><img alt="3" title="3" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Vue/v-text1.png" class="lazyload"></a><br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Vue/v-text2.png" data-fancybox="group" data-caption="4" class="fancybox"><img alt="4" title="4" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Vue/v-text2.png" class="lazyload"></a><br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Vue/v-text3.png" data-fancybox="group" data-caption="5" class="fancybox"><img alt="5" title="5" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Vue/v-text3.png" class="lazyload"></a></p><h1 id="v-html"><a class="markdownIt-Anchor" href="#v-html"></a> V-html</h1><h3 id="说到-v-text-就不得不说到-v-html-这两个是相辅相成的在一些值中有html的标签用-v-html-会解析而-v-text-不会解析"><a class="markdownIt-Anchor" href="#说到-v-text-就不得不说到-v-html-这两个是相辅相成的在一些值中有html的标签用-v-html-会解析而-v-text-不会解析"></a> <strong>说到 <code>v-text</code> 就不得不说到 <code>v-html</code> ，这两个是相辅相成的，在一些值中，有html的标签，用 <code>v-html</code> 会解析，而 <code>v-text</code> 不会解析.</strong></h3><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Vue/v-html1.png" data-fancybox="group" data-caption="6" class="fancybox"><img alt="6" title="6" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Vue/v-html1.png" class="lazyload"></a></p><h1 id="v-show"><a class="markdownIt-Anchor" href="#v-show"></a> V-show</h1><h3 id="扯到v-show就得说说他和v-if的藕断丝连了不过这里先说下-v-show"><a class="markdownIt-Anchor" href="#扯到v-show就得说说他和v-if的藕断丝连了不过这里先说下-v-show"></a> <strong>扯到<code>v-show</code>就得说说他和<code>v-if</code>的藕断丝连了.不过这里先说下 <code>v-show</code>.</strong></h3><p><strong>顾名思义就是让数据展示，那么它的值就是<code>布尔格式</code>的。</strong><br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Vue/v-show1.png" data-fancybox="group" data-caption="7" class="fancybox"><img alt="7" title="7" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Vue/v-show1.png" class="lazyload"></a></p><h3 id="在-dom树-里v-show不会让元素直接从dom中消失而是将其隐藏相对于-v-for-直接操纵-dom树-它对内存的消耗是少的"><a class="markdownIt-Anchor" href="#在-dom树-里v-show不会让元素直接从dom中消失而是将其隐藏相对于-v-for-直接操纵-dom树-它对内存的消耗是少的"></a> 在 <strong><em>DOM树</em></strong> 里，<code>v-show</code>不会让元素直接从DOM中消失，而是将其隐藏，相对于 <code>v-for</code> 直接操纵 <strong><em>DOM树</em></strong> ，它对内存的消耗是少的。</h3><h1 id="v-for"><a class="markdownIt-Anchor" href="#v-for"></a> V-for</h1><h3 id="这里就直接上图看看-dom树-的一些对比"><a class="markdownIt-Anchor" href="#这里就直接上图看看-dom树-的一些对比"></a> 这里就直接上图，看看 <strong><em>DOM树</em></strong> 的一些对比。</h3><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Vue/v-if1.png" data-fancybox="group" data-caption="7" class="fancybox"><img alt="7" title="7" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Vue/v-if1.png" class="lazyload"></a></p><h1 id="v-bind-单向数据绑定"><a class="markdownIt-Anchor" href="#v-bind-单向数据绑定"></a> V-bind 单向数据绑定</h1><h3 id="顾名思义还有一个双向数据绑定的家伙-v-bind后面是属性名绑定之后这个属性对应的值要去vue的data中找-除了url还可以绑定图片src属性-超链接的class"><a class="markdownIt-Anchor" href="#顾名思义还有一个双向数据绑定的家伙-v-bind后面是属性名绑定之后这个属性对应的值要去vue的data中找-除了url还可以绑定图片src属性-超链接的class"></a> <strong>顾名思义，还有一个双向数据绑定的家伙。v-bind后面是<code>：属性名=</code>，绑定之后，这个属性对应的值要去vue的data中找。除了url，还可以绑定图片src属性、超链接的class.</strong></h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el:<span class="string">'.app'</span>,</span><br><span class="line">    data:&#123;</span><br><span class="line">        url:<span class="string">"https://www.baidu.com"</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:href</span>=<span class="string">"url"</span>&gt;</span>click<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span>  </span><br><span class="line"> <span class="comment">&lt;!-- v-bind 可缩写成冒号，例如下面 --&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">:href</span>=<span class="string">"url"</span>&gt;</span>click<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Vue/v-bind1.png" data-fancybox="group" data-caption="8" class="fancybox"><img alt="8" title="8" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Vue/v-bind1.png" class="lazyload"></a><br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Vue/v-bind2.png" data-fancybox="group" data-caption="9" class="fancybox"><img alt="9" title="9" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Vue/v-bind2.png" class="lazyload"></a></p><h1 id="v-molde-数据双向绑定"><a class="markdownIt-Anchor" href="#v-molde-数据双向绑定"></a> V-molde 数据双向绑定</h1><h3 id="vue中经常使用到input和textarea这类表单元素使用v-model实现这些标签数据的双向绑定它会根据控件类型自动选取正确的方法来更新元素-v-molde其实是语法糖"><a class="markdownIt-Anchor" href="#vue中经常使用到input和textarea这类表单元素使用v-model实现这些标签数据的双向绑定它会根据控件类型自动选取正确的方法来更新元素-v-molde其实是语法糖"></a> vue中经常使用到<code>input</code>和<code>textarea</code>这类表单元素，使用v-model实现这些标签数据的双向绑定，它会根据控件类型自动选取正确的方法来更新元素。V-molde其实是<a href="https://baike.baidu.com/item/%E8%AF%AD%E6%B3%95%E7%B3%96/5247005?fr=aladdin" target="_blank" rel="noopener">语法糖</a>.</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"请输入姓名"</span> <span class="attr">v-model</span>=<span class="string">"name"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line">        data() &#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="actionscript">                name: <span class="string">''</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h3 id="讲大白话的一点就是同步更新vue从它的数组里拿东西然后用户输入的东西同样会存入到数组中会改变数组里面的值-浏览器又会把数组里的值同步渲染到页面中-这里附上一个小的demo-当然也会用到v-for的指令-待会儿再来一起呈现"><a class="markdownIt-Anchor" href="#讲大白话的一点就是同步更新vue从它的数组里拿东西然后用户输入的东西同样会存入到数组中会改变数组里面的值-浏览器又会把数组里的值同步渲染到页面中-这里附上一个小的demo-当然也会用到v-for的指令-待会儿再来一起呈现"></a> 讲大白话的一点，就是同步更新，vue从它的数组里拿东西，然后用户输入的东西同样会存入到数组中，会改变数组里面的值。浏览器又会把数组里的值同步渲染到页面中。这里附上一个小的demo。当然，也会用到<code>V-for</code>的指令。待会儿再来一起呈现。</h3><h1 id="v-for-迭代"><a class="markdownIt-Anchor" href="#v-for-迭代"></a> V-for 迭代</h1><h3 id="本质上就是for循环在vue中可以方便的把数据给列举取出来用在数组上用的最多-v-for基本语法为"><a class="markdownIt-Anchor" href="#本质上就是for循环在vue中可以方便的把数据给列举取出来用在数组上用的最多-v-for基本语法为"></a> 本质上就是for循环，在Vue中可以方便的把数据给列举取出来，用在数组上用的最多。<code>v-for</code>基本语法为：</h3><pre><code>    （item,index）in 'data'    //这里item表示每一项，index表示索引。具体看下列代码：</code></pre><p>注：只是实现了基本功能，对页面并没有写太多的css.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Vue-for<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> @<span class="attr">click</span>=<span class="string">"add"</span> &gt;</span>baba<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> @<span class="attr">click</span>=<span class="string">"remove"</span> &gt;</span>ddd<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"(item,index) in arr"</span>&gt;</span></span><br><span class="line">                &#123;&#123;item&#125;&#125; address:&#123;&#123;index&#125;&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-for</span>=<span class="string">"item in vegetables"</span> <span class="attr">:title</span>=<span class="string">"item.name"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 这里就是把值给循环列举出来 --&gt;</span></span><br><span class="line">            &#123;&#123;item.name&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el: <span class="string">"#app"</span>,</span></span><br><span class="line">            data: &#123;</span><br><span class="line"><span class="actionscript">                arr: [<span class="string">"beijing"</span>, <span class="string">"shenzheng"</span>, <span class="string">"aomeng"</span>, <span class="string">"changsha"</span>],</span></span><br><span class="line"><span class="actionscript"><span class="comment">//这里是循环的数组</span></span></span><br><span class="line">                vegetables: [&#123;</span><br><span class="line"><span class="actionscript">                        name: <span class="string">"i am handsome!"</span></span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line"><span class="actionscript">                        name: <span class="string">"some one like my handsome!"</span></span></span><br><span class="line">                    &#125;</span><br><span class="line">                ]</span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line"><span class="actionscript">                add: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.vegetables.push(&#123;</span></span><br><span class="line"><span class="actionscript">                        name: <span class="string">"wo shi ni baba !"</span><span class="comment">//push 推入到vegetable数组</span></span></span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;,</span><br><span class="line"><span class="actionscript">                remove: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.vegetables.shift();<span class="comment">//shift 从vegetable数组移除</span></span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h1 id="阶段小结"><a class="markdownIt-Anchor" href="#阶段小结"></a> 阶段小结</h1><p>这里写了一个综合上面的所有要点的小demo.一个记事本。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Notepad<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        body &#123;</span><br><span class="line">            background: rgb(119, 201, 221);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#big_conntent</span> &#123;</span></span><br><span class="line">            height: 500px;</span><br><span class="line">            width: 500px;</span><br><span class="line">            background: rgb(119, 201, 221);</span><br><span class="line">            color: white;</span><br><span class="line">            text-align: center;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line"><span class="css">            <span class="comment">/*居中元素*/</span></span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#item</span> &#123;</span></span><br><span class="line">            float: left;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#input</span> &#123;</span></span><br><span class="line">            width: 500px;</span><br><span class="line">            height: 40px;</span><br><span class="line">            font-size: 20px;</span><br><span class="line">            border-radius: 20px;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"big_conntent"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"title"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>NOTEPAD<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"conntent"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"input"</span> @<span class="attr">keyup.enter</span>=<span class="string">"add"</span> <span class="attr">v-model</span>=<span class="string">"inputV"</span> <span class="attr">placeholder</span>=<span class="string">"Please input"</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"show"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"(item,index) in list"</span>&gt;</span></span><br><span class="line">                        &#123;&#123;item&#125;&#125;</span><br><span class="line">                        <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"disdroy"</span> @<span class="attr">click</span>=<span class="string">"remove(index)"</span>&gt;</span>X<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">                </span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"add"</span>&gt;</span>确认添加<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h3</span>&gt;</span>共有&#123;&#123;list.length&#125;&#125;个数据<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"clear"</span>&gt;</span>一键清空<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el: <span class="string">"#big_conntent"</span>,</span></span><br><span class="line">            data: &#123;</span><br><span class="line"><span class="actionscript">                list: [<span class="string">"eating!"</span>, <span class="string">"sleeping!"</span>, <span class="string">"laugthing!"</span>, <span class="string">"playing!"</span>],</span></span><br><span class="line"><span class="actionscript">                inputV: <span class="string">"    I'm your father!"</span></span></span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line"><span class="actionscript">                add: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.list.push(<span class="keyword">this</span>.inputV);</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="keyword">this</span>.inputV)</span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="actionscript">                remove:<span class="function"><span class="keyword">function</span><span class="params">(index)</span></span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="string">"Delete click"</span>);</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(index);</span></span><br><span class="line"><span class="actionscript"><span class="keyword">this</span>.list.splice(index,<span class="number">1</span>);</span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="actionscript">                clear:<span class="function"><span class="keyword">function</span><span class="params">()</span></span></span></span><br><span class="line">                &#123;</span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.list=[];</span></span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; 
      
    
    </summary>
    
    
      <category term="▶前端" scheme="https://chuyuxuan.xyz/categories/%E2%96%B6%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="Vue" scheme="https://chuyuxuan.xyz/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>概率论知识点总结</title>
    <link href="https://chuyuxuan.xyz/2020/03/01/%E2%96%B6%E6%A6%82%E7%8E%87%E8%AE%BA/%E6%A6%82%E7%8E%87%E8%AE%BA%E7%9F%A5%E8%AF%86%E7%AC%94%E8%AE%B0/"/>
    <id>https://chuyuxuan.xyz/2020/03/01/%E2%96%B6%E6%A6%82%E7%8E%87%E8%AE%BA/%E6%A6%82%E7%8E%87%E8%AE%BA%E7%9F%A5%E8%AF%86%E7%AC%94%E8%AE%B0/</id>
    <published>2020-03-01T14:00:52.000Z</published>
    <updated>2020-04-13T14:38:18.462Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>花了一天时间去复习，<strong>后续有时再添加一些进来</strong> 。主要是我做笔记了，懒得打字。字好丑😥，看来要多手写了。</p><h1 id="乘法公式"><a class="markdownIt-Anchor" href="#乘法公式"></a> 乘法公式</h1><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/gai_lv_lun/1.jpg" data-fancybox="group" data-caption="1" class="fancybox"><img alt="1" title="1" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/gai_lv_lun/1.jpg" class="lazyload"></a></p><h1 id="全概率公式"><a class="markdownIt-Anchor" href="#全概率公式"></a> 全概率公式</h1><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/gai_lv_lun/2.jpg" data-fancybox="group" data-caption="2" class="fancybox"><img alt="2" title="2" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/gai_lv_lun/2.jpg" class="lazyload"></a></p><h1 id="贝叶斯公式"><a class="markdownIt-Anchor" href="#贝叶斯公式"></a> 贝叶斯公式</h1><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/gai_lv_lun/3.jpg" data-fancybox="group" data-caption="3" class="fancybox"><img alt="3" title="3" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/gai_lv_lun/3.jpg" class="lazyload"></a><br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/gai_lv_lun/4.jpg" data-fancybox="group" data-caption="4" class="fancybox"><img alt="4" title="4" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/gai_lv_lun/4.jpg" class="lazyload"></a></p><h1 id="事件的独立性"><a class="markdownIt-Anchor" href="#事件的独立性"></a> 事件的独立性</h1><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/gai_lv_lun/5.jpg" data-fancybox="group" data-caption="5" class="fancybox"><img alt="5" title="5" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/gai_lv_lun/5.jpg" class="lazyload"></a></p><h1 id="二项概率公式"><a class="markdownIt-Anchor" href="#二项概率公式"></a> 二项概率公式</h1><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/gai_lv_lun/IMG_20200315_153737.jpg" data-fancybox="group" data-caption="6" class="fancybox"><img alt="6" title="6" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/gai_lv_lun/IMG_20200315_153737.jpg" class="lazyload"></a></p><h1 id="泊松分布"><a class="markdownIt-Anchor" href="#泊松分布"></a> 泊松分布</h1><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/gai_lv_lun/IMG_20200315_153904.jpg" data-fancybox="group" data-caption="7" class="fancybox"><img alt="7" title="7" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/gai_lv_lun/IMG_20200315_153904.jpg" class="lazyload"></a></p><h1 id="超几何分布"><a class="markdownIt-Anchor" href="#超几何分布"></a> 超几何分布</h1><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/gai_lv_lun/IMG_20200315_153916.jpg" data-fancybox="group" data-caption="8" class="fancybox"><img alt="8" title="8" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/gai_lv_lun/IMG_20200315_153916.jpg" class="lazyload"></a></p><h1 id="指数分布"><a class="markdownIt-Anchor" href="#指数分布"></a> 指数分布</h1><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/gai_lv_lun/IMG_20200315_153922.jpg" data-fancybox="group" data-caption="9" class="fancybox"><img alt="9" title="9" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/gai_lv_lun/IMG_20200315_153922.jpg" class="lazyload"></a></p><h1 id="正态分布"><a class="markdownIt-Anchor" href="#正态分布"></a> 正态分布</h1><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/gai_lv_lun/IMG_20200315_153932.jpg" data-fancybox="group" data-caption="10" class="fancybox"><img alt="10" title="10" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/gai_lv_lun/IMG_20200315_153932.jpg" class="lazyload"></a></p><h1 id="随机变量分布"><a class="markdownIt-Anchor" href="#随机变量分布"></a> 随机变量分布</h1><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/gai_lv_lun/IMG_20200315_153940.jpg" data-fancybox="group" data-caption="10" class="fancybox"><img alt="10" title="10" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/gai_lv_lun/IMG_20200315_153940.jpg" class="lazyload"></a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; 
      
    
    </summary>
    
    
      <category term="▶概率论" scheme="https://chuyuxuan.xyz/categories/%E2%96%B6%E6%A6%82%E7%8E%87%E8%AE%BA/"/>
    
    
      <category term="概率论" scheme="https://chuyuxuan.xyz/tags/%E6%A6%82%E7%8E%87%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>为了博客也是操碎了心（Linux 下 配置 git ）</title>
    <link href="https://chuyuxuan.xyz/2020/02/28/%E2%96%B6%E5%90%8E%E7%AB%AF/Linux/Linux%E5%AE%89%E8%A3%85git/"/>
    <id>https://chuyuxuan.xyz/2020/02/28/%E2%96%B6%E5%90%8E%E7%AB%AF/Linux/Linux%E5%AE%89%E8%A3%85git/</id>
    <published>2020-02-28T10:49:35.000Z</published>
    <updated>2020-04-13T13:05:03.009Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="起因"><a class="markdownIt-Anchor" href="#起因"></a> 起因</h1><p>诚然,我的博客采用的是<code>hexo farmework</code>，依托于<code>gitpage</code>而搭建的，对于国内的我来说很不友好。😖于是我在想啊，要不用CND加速？<strong>哈哈哈，蛮不错的</strong>。结果一查相关资料，顿时有点懵。</p><ul><li><p>我买了域名，但是<code>gitpage</code>依赖于GitHub，是属于国外的服务器的，所以我并不需要备案就可以用<a href="https://chuyuxuan.xyz">chuyuxuan.xyz</a>来访问我的博客。</p></li><li><p>而假如我想用国内的CDN加速我的资源，我的域名就必须要备案。备案你就得必须要有服务器。<br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/laugh/005.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/laugh/005.gif" class="lazyload"></a></p></li></ul><p>好了，扯的有点远了，总之，能用技术解决的事情尽量用技术去解决。所以了了适应云主机，这里便采用虚拟机模拟了一个本地的服务器，为自己把博客部署到云端做准备。</p><h1 id="准备"><a class="markdownIt-Anchor" href="#准备"></a> 准备</h1><div class="note success">            <ol><li>VMware Workstation <a href="https://my.vmware.com/en/web/vmware/info/slug/desktop_end_user_computing/vmware_workstation_pro/15_0?wd=&amp;eqid=9718f2bc000e9110000000065e58f46d" target="_blank" rel="noopener">点击下载</a></li><li>CentOS ISO <a href="https://mirrors.aliyun.com/centos/7/isos/x86_64/CentOS-7-x86_64-DVD-1908.iso" target="_blank" rel="noopener">点击下载</a></li></ol><p><em>当然，可以自己百度搜索相关资源</em></p>          </div><h1 id="安装-vmware-和-建立centos虚拟机"><a class="markdownIt-Anchor" href="#安装-vmware-和-建立centos虚拟机"></a> 安装 <code>VMware</code> 和 建立<code>centOS</code>虚拟机</h1><p>这里我就不再演示了，是个人就会安装，实在不会百度。<br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/laugh/097.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/laugh/097.gif" class="lazyload"></a></p><h1 id="git服务端安装"><a class="markdownIt-Anchor" href="#git服务端安装"></a> git服务端安装</h1><h2 id="从yum安装git"><a class="markdownIt-Anchor" href="#从yum安装git"></a> 从<code>yum</code>安装git</h2><pre><code>yum install git-core</code></pre><h2 id="在需要的位置创建一个裸仓库"><a class="markdownIt-Anchor" href="#在需要的位置创建一个裸仓库"></a> 在需要的位置创建一个裸仓库</h2><pre><code>cd /usr/local mkdir gitcd gitgit init --bare demo.git</code></pre><h2 id="创建一个git用户并赋予密码"><a class="markdownIt-Anchor" href="#创建一个git用户并赋予密码"></a> 创建一个git用户并赋予密码</h2><pre><code>useradd gitpasswd git//输入密码大于8位，用于push和clone</code></pre><h2 id="赋予git用户权限"><a class="markdownIt-Anchor" href="#赋予git用户权限"></a> 赋予git用户权限</h2><p><code>chown</code>将指定文件的拥有者改为指定的用户或组，用户可以是用户名或者用户ID；组可以是组名或者组ID；文件是以空格分开的要改变权限的文件列表，支持通配符。系统管理员经常使用chown命令，在将文件拷贝到另一个用户的名录下之后，让用户拥有使用该文件的权限。</p><pre><code>chown -R git:git demo.git //把权限赋给名字为git的用户</code></pre><h2 id="禁用git用户shell登录为了安全虽然我是在本地虚拟机上跑"><a class="markdownIt-Anchor" href="#禁用git用户shell登录为了安全虽然我是在本地虚拟机上跑"></a> 禁用git用户shell登录（为了安全，虽然我是在本地虚拟机上跑）</h2><pre><code>vim /etc/passwd//找到最后一行（一般都是的）// 敲 “i” 进行编辑git:x:1000:1000::/home/git:/usr/bin/git-shell//改成上面格式之后esc然后敲“：wq!”保存并退出</code></pre><p><strong>恭喜!服务端配置基本完成，接下来是客户端了。</strong></p><h1 id="git客户端安装"><a class="markdownIt-Anchor" href="#git客户端安装"></a> git客户端安装</h1><p><strong>这里百度去吧，很简单的，我采用的是window下的git服务，就直接下一步好了，这里给出下载地址：</strong><a href="https://git-scm.com/downloads" target="_blank" rel="noopener">点击下载</a></p><h2 id="创建客户端用户"><a class="markdownIt-Anchor" href="#创建客户端用户"></a> 创建客户端用户</h2><p>安装好后桌面右键，<code>git Bush here</code>就可以进入shell.</p><pre><code>git config --global user.name &quot;你的名字&quot;git config --global user.email &quot;你的邮箱&quot;</code></pre><h2 id="创建密钥ssh不嫌麻烦的话可以不用配置"><a class="markdownIt-Anchor" href="#创建密钥ssh不嫌麻烦的话可以不用配置"></a> 创建密钥ssh(不嫌麻烦的话可以不用配置)</h2><pre><code>ssh-keygen -t rsa -C &quot;你的邮箱&quot;</code></pre><p>然后<strong>一直回车</strong>，直到完毕。</p><h2 id="将公钥加入服务器列表"><a class="markdownIt-Anchor" href="#将公钥加入服务器列表"></a> 将公钥加入服务器列表</h2><h3 id="取得本地ssh公钥"><a class="markdownIt-Anchor" href="#取得本地ssh公钥"></a> 取得本地ssh公钥</h3><pre><code>cd ~/.sshcat id_rsa.pub </code></pre><p>复制，内容大概如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ssh-rsafdjslafhs;jgjieghegoghskf+fdhsjaklghj</span><br><span class="line">fsahjgjrl;agjkfl;dafjsighiroghuerhgkfdvrreui</span><br><span class="line">fhgrjegreoughuighuitglsghruighirhgbibvifrggg</span><br><span class="line">grhuipaghuireghergerpreofjeiwfhfuhbjzb+0frhf</span><br><span class="line">fshgheagwgegw&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;你的邮箱</span><br></pre></td></tr></table></figure></div><h3 id="添加到服务端"><a class="markdownIt-Anchor" href="#添加到服务端"></a> 添加到服务端</h3><p>默认列表在/root/.ssh/authorized_keys，使用vim 编辑此文件输入刚才复制的内容，保存退出。</p><pre><code>vi /root/.ssh/authorized_keys//i修改//esc后输入:wq保存退出</code></pre><h1 id="克隆远程项目到本地"><a class="markdownIt-Anchor" href="#克隆远程项目到本地"></a> 克隆远程项目到本地</h1><p>在自己的电脑上随便找个位置，<code>git Bush here</code>，</p><pre><code>git clone git@‘你服务器的IP地址’:/usr/local/git/demogit.git//例如： git clone git@111.111.111.111:/usr/local/git/demo.git</code></pre><h1 id="至此over"><a class="markdownIt-Anchor" href="#至此over"></a> 至此，over。</h1><p>当然，你可以push你自己的代码到服务器上，比方说把<code>hexo</code>静态博客push上去，实现本地访问。</p><h1 id="感慨"><a class="markdownIt-Anchor" href="#感慨"></a> 感慨</h1><p>花了我很久时间，大部分时间我在做无用功。。怪自己自学太慢了。<br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/laugh/087.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/laugh/087.gif" class="lazyload"></a></p><p>我在想自己还到底要不要用CDN加速哦。。。难搞难搞。。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; 
      
    
    </summary>
    
    
      <category term="▶后端" scheme="https://chuyuxuan.xyz/categories/%E2%96%B6%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="Linux" scheme="https://chuyuxuan.xyz/tags/Linux/"/>
    
      <category term="centOS" scheme="https://chuyuxuan.xyz/tags/centOS/"/>
    
  </entry>
  
  <entry>
    <title>日常感慨</title>
    <link href="https://chuyuxuan.xyz/2020/02/26/%E2%96%B6%E7%94%9F%E6%B4%BB%E6%97%A5%E5%B8%B8/%E6%84%9F%E6%85%A8%E4%B8%80%E4%B8%8B/"/>
    <id>https://chuyuxuan.xyz/2020/02/26/%E2%96%B6%E7%94%9F%E6%B4%BB%E6%97%A5%E5%B8%B8/%E6%84%9F%E6%85%A8%E4%B8%80%E4%B8%8B/</id>
    <published>2020-02-26T14:02:22.000Z</published>
    <updated>2020-05-08T12:44:57.064Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="又日常作死的感慨一下"><a class="markdownIt-Anchor" href="#又日常作死的感慨一下"></a> 又日常作死的感慨一下。</h1><p>7点起来，第一件事就是想好今天要做什么，磨磨蹭蹭半天才想起，诶！我<code>概率论</code>还在挂着。于是悠哉游哉的起床<span style="border-bottom: 1px dashed #389fff;"><span class="hint--top hint--rounded hint--info" aria-label="是的，我洗漱都懒得洗😪" ontouchstart>洗漱</span></span>。然而在挂念着什么时候开学的我知道现在写这篇感慨才知道今天又没有<strong>复习</strong>。<a href="https://gitee.com/chuyuxuan/tuc/raw/master/laugh/005.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/laugh/005.gif" class="lazyload"></a>。<code>今天又是充满希望的一天</code>就这样过去了。</p><h1 id="也不是什么也没做"><a class="markdownIt-Anchor" href="#也不是什么也没做"></a> 也不是什么也没做。</h1><p>拉拉扯扯学到<strong>Vue</strong>的axios库来了。对于小白的我这个无疑有一定的难度。所以也就照着视频勉勉强强的做了一个天气预报的网站。欸，这就纳闷了，你做这个做一天啊？是的，我是做了今天一天才拉拉扯扯的做了一个这么样的东西：<br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/record_gif/20200226.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/record_gif/20200226.gif" class="lazyload"></a></p><p><strong>总觉得自己有强迫症</strong> <s>没错你就是的</s>，自己搞个破动画 ，也就是这个logo：<br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/record_gif/logo.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/record_gif/logo.gif" class="lazyload"></a></p><p>便直接动用了 <code>AE ,PR , PS</code> ，🤪自己老喜欢扣这些不起眼的小细节而浪费大把时间。没错，这个动画从素材到完成花了我1一个小时不到<s>主要是中途逛逛小破绽啥的</s>。<span style="border-bottom: 1px dashed #389fff;"><span class="hint--top hint--rounded hint--info" aria-label="是的，每当话说不连贯就用然后来凑" ontouchstart>然后</span></span> ，做 <strong>CSS</strong> 控制布局，欸！这里不能居中？为什么？啥啊啊，<code>div</code>没有<code>text-align</code>属性？ 于是又是<code>flaot</code>又是其他的东西一通复习<s>前面学的都忘了🤪</s>嗷嗷，纳鲁吼多！就这样除去逛破站的时间。差不多就花在这里了。<a href="https://gitee.com/chuyuxuan/tuc/raw/master/laugh/hh026.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/laugh/hh026.gif" class="lazyload"></a><br>嗷！对了，看完了廖雪峰老师的git基本操作，果然！<code>git是全世界最好的分布式系统！</code><br>不早了不早了，再碧碧赖赖就没时间记单词了，打卡不成功又要扣钱，明天全天砸在<code>概率论</code>！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; 
      
    
    </summary>
    
    
      <category term="▶生活日常" scheme="https://chuyuxuan.xyz/categories/%E2%96%B6%E7%94%9F%E6%B4%BB%E6%97%A5%E5%B8%B8/"/>
    
    
      <category term="随笔" scheme="https://chuyuxuan.xyz/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
</feed>
